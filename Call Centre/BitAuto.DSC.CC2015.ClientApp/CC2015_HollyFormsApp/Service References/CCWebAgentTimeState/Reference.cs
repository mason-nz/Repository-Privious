//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CC2015_HollyFormsApp.CCWebAgentTimeState {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CCWebAgentTimeState.AgentTimeStateSoap")]
    public interface AgentTimeStateSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrentTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime GetCurrentTime(string verifyCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetCurrentTime", ReplyAction="*")]
        System.IAsyncResult BeginGetCurrentTime(string verifyCode, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetCurrentTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertAgentState2DB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertAgentState2DB(string verifyCode, int state, int agentAuxState, int callType, int agTime, System.DateTime startTime, string agentId, string trueName, string groupName, string extensionNum);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertAgentState2DB", ReplyAction="*")]
        System.IAsyncResult BeginInsertAgentState2DB(string verifyCode, int state, int agentAuxState, int callType, int agTime, System.DateTime startTime, string agentId, string trueName, string groupName, string extensionNum, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertAgentState2DB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAgentState2DB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateAgentState2DB(string verifyCode, int state, int agentAuxState, int callType, int agTime, System.DateTime startTime, string agentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateAgentState2DB", ReplyAction="*")]
        System.IAsyncResult BeginUpdateAgentState2DB(string verifyCode, int state, int agentAuxState, int callType, int agTime, System.DateTime startTime, string agentId, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateAgentState2DB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteAgentState2DB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteAgentState2DB(string verifyCode, string agentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DeleteAgentState2DB", ReplyAction="*")]
        System.IAsyncResult BeginDeleteAgentState2DB(string verifyCode, string agentId, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteAgentState2DB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertAgentStateDetail2DB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertAgentStateDetail2DB(string verifyCode, int state, int agentAuxState, int callType, System.DateTime startTime, System.DateTime endTime, string trueName, string agentId, string extensionNum, int bgid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertAgentStateDetail2DB", ReplyAction="*")]
        System.IAsyncResult BeginInsertAgentStateDetail2DB(string verifyCode, int state, int agentAuxState, int callType, System.DateTime startTime, System.DateTime endTime, string trueName, string agentId, string extensionNum, int bgid, System.AsyncCallback callback, object asyncState);
        
        int EndInsertAgentStateDetail2DB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateStateDetail2DB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateStateDetail2DB(string verifyCode, int oid, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateStateDetail2DB", ReplyAction="*")]
        System.IAsyncResult BeginUpdateStateDetail2DB(string verifyCode, int oid, System.DateTime endTime, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateStateDetail2DB(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateLoginOffTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateLoginOffTime(string verifyCode, string agentID, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateLoginOffTime", ReplyAction="*")]
        System.IAsyncResult BeginUpdateLoginOffTime(string verifyCode, string agentID, System.DateTime endTime, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateLoginOffTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserGroupNamesStr", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserGroupNamesStr(string verifyCode, int userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUserGroupNamesStr", ReplyAction="*")]
        System.IAsyncResult BeginGetUserGroupNamesStr(string verifyCode, int userId, System.AsyncCallback callback, object asyncState);
        
        string EndGetUserGroupNamesStr(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBGNameAndOutNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBGNameAndOutNum(string verifyCode, int userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetBGNameAndOutNum", ReplyAction="*")]
        System.IAsyncResult BeginGetBGNameAndOutNum(string verifyCode, int userId, System.AsyncCallback callback, object asyncState);
        
        string EndGetBGNameAndOutNum(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAgentNumsOnLine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool GetAgentNumsOnLine(out int[] iarray, out string errormsg, string verifyCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAgentNumsOnLine", ReplyAction="*")]
        System.IAsyncResult BeginGetAgentNumsOnLine(string verifyCode, System.AsyncCallback callback, object asyncState);
        
        bool EndGetAgentNumsOnLine(out int[] iarray, out string errormsg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAgentStateOnLine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool GetAgentStateOnLine(out System.Data.DataTable dt, out string errormsg, string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAgentStateOnLine", ReplyAction="*")]
        System.IAsyncResult BeginGetAgentStateOnLine(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender, System.AsyncCallback callback, object asyncState);
        
        bool EndGetAgentStateOnLine(out System.Data.DataTable dt, out string errormsg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAgentStateWorking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool GetAgentStateWorking(out System.Data.DataTable dt, out string errormsg, string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAgentStateWorking", ReplyAction="*")]
        System.IAsyncResult BeginGetAgentStateWorking(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender, System.AsyncCallback callback, object asyncState);
        
        bool EndGetAgentStateWorking(out System.Data.DataTable dt, out string errormsg, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsCanListenAgent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsCanListenAgent(string verifyCode, int userID, string sysID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IsCanListenAgent", ReplyAction="*")]
        System.IAsyncResult BeginIsCanListenAgent(string verifyCode, int userID, string sysID, System.AsyncCallback callback, object asyncState);
        
        bool EndIsCanListenAgent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserIDByNameDomainAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetUserIDByNameDomainAccount(string verifyCode, string domainAccount);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUserIDByNameDomainAccount", ReplyAction="*")]
        System.IAsyncResult BeginGetUserIDByNameDomainAccount(string verifyCode, string domainAccount, System.AsyncCallback callback, object asyncState);
        
        int EndGetUserIDByNameDomainAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserIDByUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetUserIDByUserName(string verifyCode, string username);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUserIDByUserName", ReplyAction="*")]
        System.IAsyncResult BeginGetUserIDByUserName(string verifyCode, string username, System.AsyncCallback callback, object asyncState);
        
        int EndGetUserIDByUserName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserSkillGroupIdAndPriorty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetUserSkillGroupIdAndPriorty(string verifyCode, int userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetUserSkillGroupIdAndPriorty", ReplyAction="*")]
        System.IAsyncResult BeginGetUserSkillGroupIdAndPriorty(string verifyCode, int userId, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetUserSkillGroupIdAndPriorty(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetManufactureSkillGroupIDBySGID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetManufactureSkillGroupIDBySGID(string verifyCode, int sgID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetManufactureSkillGroupIDBySGID", ReplyAction="*")]
        System.IAsyncResult BeginGetManufactureSkillGroupIDBySGID(string verifyCode, int sgID, System.AsyncCallback callback, object asyncState);
        
        string EndGetManufactureSkillGroupIDBySGID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSkillNameByMID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSkillNameByMID(string verifyCode, string mID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetSkillNameByMID", ReplyAction="*")]
        System.IAsyncResult BeginGetSkillNameByMID(string verifyCode, string mID, System.AsyncCallback callback, object asyncState);
        
        string EndGetSkillNameByMID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSkillNameBySGID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSkillNameBySGID(string verifyCode, int sgID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetSkillNameBySGID", ReplyAction="*")]
        System.IAsyncResult BeginGetSkillNameBySGID(string verifyCode, int sgID, System.AsyncCallback callback, object asyncState);
        
        string EndGetSkillNameBySGID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHotlineSkillGroupByTelMainNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetHotlineSkillGroupByTelMainNum(string verifyCode, string tel);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetHotlineSkillGroupByTelMainNum", ReplyAction="*")]
        System.IAsyncResult BeginGetHotlineSkillGroupByTelMainNum(string verifyCode, string tel, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetHotlineSkillGroupByTelMainNum(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAgentStateOnLineByWhere", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAgentStateOnLineByWhere(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender, string where);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAgentStateOnLineByWhere", ReplyAction="*")]
        System.IAsyncResult BeginGetAgentStateOnLineByWhere(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender, string where, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetAgentStateOnLineByWhere(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetManageBusinessGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetManageBusinessGroups(string verifyCode, int userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetManageBusinessGroups", ReplyAction="*")]
        System.IAsyncResult BeginGetManageBusinessGroups(string verifyCode, int userId, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndGetManageBusinessGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllEmployeeAgentAndBusinessGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAllEmployeeAgentAndBusinessGroup(string verifyCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllEmployeeAgentAndBusinessGroup", ReplyAction="*")]
        System.IAsyncResult BeginGetAllEmployeeAgentAndBusinessGroup(string verifyCode, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetAllEmployeeAgentAndBusinessGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertListenAgentLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertListenAgentLog(string verifyCode, int listenUserID, string listenUserName, string listenNum, string listenExtensionNum, int listenOper, int agentUserID, string agentUserName, string agentNum, string agentExtensionNum, int agentStatus, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vendor, string remark);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertListenAgentLog", ReplyAction="*")]
        System.IAsyncResult BeginInsertListenAgentLog(string verifyCode, int listenUserID, string listenUserName, string listenNum, string listenExtensionNum, int listenOper, int agentUserID, string agentUserName, string agentNum, string agentExtensionNum, int agentStatus, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vendor, string remark, System.AsyncCallback callback, object asyncState);
        
        int EndInsertListenAgentLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendLogToServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SendLogToServer(string verifyCode, string path, string logmsg);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SendLogToServer", ReplyAction="*")]
        System.IAsyncResult BeginSendLogToServer(string verifyCode, string path, string logmsg, System.AsyncCallback callback, object asyncState);
        
        void EndSendLogToServer(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum Vender {
        
        /// <remarks/>
        Genesys,
        
        /// <remarks/>
        Holly,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AgentTimeStateSoapChannel : CC2015_HollyFormsApp.CCWebAgentTimeState.AgentTimeStateSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertAgentState2DBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertAgentState2DBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateAgentState2DBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateAgentState2DBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteAgentState2DBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteAgentState2DBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertAgentStateDetail2DBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertAgentStateDetail2DBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateStateDetail2DBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateStateDetail2DBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateLoginOffTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateLoginOffTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserGroupNamesStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserGroupNamesStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBGNameAndOutNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBGNameAndOutNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAgentNumsOnLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAgentNumsOnLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int[] iarray {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
        
        public string errormsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAgentStateOnLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAgentStateOnLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable dt {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        public string errormsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAgentStateWorkingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAgentStateWorkingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable dt {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        public string errormsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsCanListenAgentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsCanListenAgentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserIDByNameDomainAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserIDByNameDomainAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserIDByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserIDByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserSkillGroupIdAndPriortyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserSkillGroupIdAndPriortyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetManufactureSkillGroupIDBySGIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetManufactureSkillGroupIDBySGIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSkillNameByMIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSkillNameByMIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSkillNameBySGIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSkillNameBySGIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHotlineSkillGroupByTelMainNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHotlineSkillGroupByTelMainNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAgentStateOnLineByWhereCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAgentStateOnLineByWhereCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetManageBusinessGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetManageBusinessGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllEmployeeAgentAndBusinessGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllEmployeeAgentAndBusinessGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertListenAgentLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertListenAgentLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgentTimeStateSoapClient : System.ServiceModel.ClientBase<CC2015_HollyFormsApp.CCWebAgentTimeState.AgentTimeStateSoap>, CC2015_HollyFormsApp.CCWebAgentTimeState.AgentTimeStateSoap {
        
        private BeginOperationDelegate onBeginGetCurrentTimeDelegate;
        
        private EndOperationDelegate onEndGetCurrentTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertAgentState2DBDelegate;
        
        private EndOperationDelegate onEndInsertAgentState2DBDelegate;
        
        private System.Threading.SendOrPostCallback onInsertAgentState2DBCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAgentState2DBDelegate;
        
        private EndOperationDelegate onEndUpdateAgentState2DBDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAgentState2DBCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAgentState2DBDelegate;
        
        private EndOperationDelegate onEndDeleteAgentState2DBDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAgentState2DBCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertAgentStateDetail2DBDelegate;
        
        private EndOperationDelegate onEndInsertAgentStateDetail2DBDelegate;
        
        private System.Threading.SendOrPostCallback onInsertAgentStateDetail2DBCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateStateDetail2DBDelegate;
        
        private EndOperationDelegate onEndUpdateStateDetail2DBDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateStateDetail2DBCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateLoginOffTimeDelegate;
        
        private EndOperationDelegate onEndUpdateLoginOffTimeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateLoginOffTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserGroupNamesStrDelegate;
        
        private EndOperationDelegate onEndGetUserGroupNamesStrDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserGroupNamesStrCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBGNameAndOutNumDelegate;
        
        private EndOperationDelegate onEndGetBGNameAndOutNumDelegate;
        
        private System.Threading.SendOrPostCallback onGetBGNameAndOutNumCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAgentNumsOnLineDelegate;
        
        private EndOperationDelegate onEndGetAgentNumsOnLineDelegate;
        
        private System.Threading.SendOrPostCallback onGetAgentNumsOnLineCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAgentStateOnLineDelegate;
        
        private EndOperationDelegate onEndGetAgentStateOnLineDelegate;
        
        private System.Threading.SendOrPostCallback onGetAgentStateOnLineCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAgentStateWorkingDelegate;
        
        private EndOperationDelegate onEndGetAgentStateWorkingDelegate;
        
        private System.Threading.SendOrPostCallback onGetAgentStateWorkingCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsCanListenAgentDelegate;
        
        private EndOperationDelegate onEndIsCanListenAgentDelegate;
        
        private System.Threading.SendOrPostCallback onIsCanListenAgentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserIDByNameDomainAccountDelegate;
        
        private EndOperationDelegate onEndGetUserIDByNameDomainAccountDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserIDByNameDomainAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserIDByUserNameDelegate;
        
        private EndOperationDelegate onEndGetUserIDByUserNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserIDByUserNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserSkillGroupIdAndPriortyDelegate;
        
        private EndOperationDelegate onEndGetUserSkillGroupIdAndPriortyDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserSkillGroupIdAndPriortyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetManufactureSkillGroupIDBySGIDDelegate;
        
        private EndOperationDelegate onEndGetManufactureSkillGroupIDBySGIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetManufactureSkillGroupIDBySGIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSkillNameByMIDDelegate;
        
        private EndOperationDelegate onEndGetSkillNameByMIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetSkillNameByMIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSkillNameBySGIDDelegate;
        
        private EndOperationDelegate onEndGetSkillNameBySGIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetSkillNameBySGIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHotlineSkillGroupByTelMainNumDelegate;
        
        private EndOperationDelegate onEndGetHotlineSkillGroupByTelMainNumDelegate;
        
        private System.Threading.SendOrPostCallback onGetHotlineSkillGroupByTelMainNumCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAgentStateOnLineByWhereDelegate;
        
        private EndOperationDelegate onEndGetAgentStateOnLineByWhereDelegate;
        
        private System.Threading.SendOrPostCallback onGetAgentStateOnLineByWhereCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetManageBusinessGroupsDelegate;
        
        private EndOperationDelegate onEndGetManageBusinessGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onGetManageBusinessGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllEmployeeAgentAndBusinessGroupDelegate;
        
        private EndOperationDelegate onEndGetAllEmployeeAgentAndBusinessGroupDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllEmployeeAgentAndBusinessGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertListenAgentLogDelegate;
        
        private EndOperationDelegate onEndInsertListenAgentLogDelegate;
        
        private System.Threading.SendOrPostCallback onInsertListenAgentLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendLogToServerDelegate;
        
        private EndOperationDelegate onEndSendLogToServerDelegate;
        
        private System.Threading.SendOrPostCallback onSendLogToServerCompletedDelegate;
        
        public AgentTimeStateSoapClient() {
        }
        
        public AgentTimeStateSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AgentTimeStateSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgentTimeStateSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgentTimeStateSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetCurrentTimeCompletedEventArgs> GetCurrentTimeCompleted;
        
        public event System.EventHandler<InsertAgentState2DBCompletedEventArgs> InsertAgentState2DBCompleted;
        
        public event System.EventHandler<UpdateAgentState2DBCompletedEventArgs> UpdateAgentState2DBCompleted;
        
        public event System.EventHandler<DeleteAgentState2DBCompletedEventArgs> DeleteAgentState2DBCompleted;
        
        public event System.EventHandler<InsertAgentStateDetail2DBCompletedEventArgs> InsertAgentStateDetail2DBCompleted;
        
        public event System.EventHandler<UpdateStateDetail2DBCompletedEventArgs> UpdateStateDetail2DBCompleted;
        
        public event System.EventHandler<UpdateLoginOffTimeCompletedEventArgs> UpdateLoginOffTimeCompleted;
        
        public event System.EventHandler<GetUserGroupNamesStrCompletedEventArgs> GetUserGroupNamesStrCompleted;
        
        public event System.EventHandler<GetBGNameAndOutNumCompletedEventArgs> GetBGNameAndOutNumCompleted;
        
        public event System.EventHandler<GetAgentNumsOnLineCompletedEventArgs> GetAgentNumsOnLineCompleted;
        
        public event System.EventHandler<GetAgentStateOnLineCompletedEventArgs> GetAgentStateOnLineCompleted;
        
        public event System.EventHandler<GetAgentStateWorkingCompletedEventArgs> GetAgentStateWorkingCompleted;
        
        public event System.EventHandler<IsCanListenAgentCompletedEventArgs> IsCanListenAgentCompleted;
        
        public event System.EventHandler<GetUserIDByNameDomainAccountCompletedEventArgs> GetUserIDByNameDomainAccountCompleted;
        
        public event System.EventHandler<GetUserIDByUserNameCompletedEventArgs> GetUserIDByUserNameCompleted;
        
        public event System.EventHandler<GetUserSkillGroupIdAndPriortyCompletedEventArgs> GetUserSkillGroupIdAndPriortyCompleted;
        
        public event System.EventHandler<GetManufactureSkillGroupIDBySGIDCompletedEventArgs> GetManufactureSkillGroupIDBySGIDCompleted;
        
        public event System.EventHandler<GetSkillNameByMIDCompletedEventArgs> GetSkillNameByMIDCompleted;
        
        public event System.EventHandler<GetSkillNameBySGIDCompletedEventArgs> GetSkillNameBySGIDCompleted;
        
        public event System.EventHandler<GetHotlineSkillGroupByTelMainNumCompletedEventArgs> GetHotlineSkillGroupByTelMainNumCompleted;
        
        public event System.EventHandler<GetAgentStateOnLineByWhereCompletedEventArgs> GetAgentStateOnLineByWhereCompleted;
        
        public event System.EventHandler<GetManageBusinessGroupsCompletedEventArgs> GetManageBusinessGroupsCompleted;
        
        public event System.EventHandler<GetAllEmployeeAgentAndBusinessGroupCompletedEventArgs> GetAllEmployeeAgentAndBusinessGroupCompleted;
        
        public event System.EventHandler<InsertListenAgentLogCompletedEventArgs> InsertListenAgentLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendLogToServerCompleted;
        
        public System.DateTime GetCurrentTime(string verifyCode) {
            return base.Channel.GetCurrentTime(verifyCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCurrentTime(string verifyCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentTime(verifyCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetCurrentTime(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentTime(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            return this.BeginGetCurrentTime(verifyCode, callback, asyncState);
        }
        
        private object[] OnEndGetCurrentTime(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetCurrentTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentTimeCompleted(object state) {
            if ((this.GetCurrentTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentTimeCompleted(this, new GetCurrentTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentTimeAsync(string verifyCode) {
            this.GetCurrentTimeAsync(verifyCode, null);
        }
        
        public void GetCurrentTimeAsync(string verifyCode, object userState) {
            if ((this.onBeginGetCurrentTimeDelegate == null)) {
                this.onBeginGetCurrentTimeDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentTime);
            }
            if ((this.onEndGetCurrentTimeDelegate == null)) {
                this.onEndGetCurrentTimeDelegate = new EndOperationDelegate(this.OnEndGetCurrentTime);
            }
            if ((this.onGetCurrentTimeCompletedDelegate == null)) {
                this.onGetCurrentTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentTimeDelegate, new object[] {
                        verifyCode}, this.onEndGetCurrentTimeDelegate, this.onGetCurrentTimeCompletedDelegate, userState);
        }
        
        public bool InsertAgentState2DB(string verifyCode, int state, int agentAuxState, int callType, int agTime, System.DateTime startTime, string agentId, string trueName, string groupName, string extensionNum) {
            return base.Channel.InsertAgentState2DB(verifyCode, state, agentAuxState, callType, agTime, startTime, agentId, trueName, groupName, extensionNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertAgentState2DB(string verifyCode, int state, int agentAuxState, int callType, int agTime, System.DateTime startTime, string agentId, string trueName, string groupName, string extensionNum, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertAgentState2DB(verifyCode, state, agentAuxState, callType, agTime, startTime, agentId, trueName, groupName, extensionNum, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndInsertAgentState2DB(System.IAsyncResult result) {
            return base.Channel.EndInsertAgentState2DB(result);
        }
        
        private System.IAsyncResult OnBeginInsertAgentState2DB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            int state = ((int)(inValues[1]));
            int agentAuxState = ((int)(inValues[2]));
            int callType = ((int)(inValues[3]));
            int agTime = ((int)(inValues[4]));
            System.DateTime startTime = ((System.DateTime)(inValues[5]));
            string agentId = ((string)(inValues[6]));
            string trueName = ((string)(inValues[7]));
            string groupName = ((string)(inValues[8]));
            string extensionNum = ((string)(inValues[9]));
            return this.BeginInsertAgentState2DB(verifyCode, state, agentAuxState, callType, agTime, startTime, agentId, trueName, groupName, extensionNum, callback, asyncState);
        }
        
        private object[] OnEndInsertAgentState2DB(System.IAsyncResult result) {
            bool retVal = this.EndInsertAgentState2DB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertAgentState2DBCompleted(object state) {
            if ((this.InsertAgentState2DBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertAgentState2DBCompleted(this, new InsertAgentState2DBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertAgentState2DBAsync(string verifyCode, int state, int agentAuxState, int callType, int agTime, System.DateTime startTime, string agentId, string trueName, string groupName, string extensionNum) {
            this.InsertAgentState2DBAsync(verifyCode, state, agentAuxState, callType, agTime, startTime, agentId, trueName, groupName, extensionNum, null);
        }
        
        public void InsertAgentState2DBAsync(string verifyCode, int state, int agentAuxState, int callType, int agTime, System.DateTime startTime, string agentId, string trueName, string groupName, string extensionNum, object userState) {
            if ((this.onBeginInsertAgentState2DBDelegate == null)) {
                this.onBeginInsertAgentState2DBDelegate = new BeginOperationDelegate(this.OnBeginInsertAgentState2DB);
            }
            if ((this.onEndInsertAgentState2DBDelegate == null)) {
                this.onEndInsertAgentState2DBDelegate = new EndOperationDelegate(this.OnEndInsertAgentState2DB);
            }
            if ((this.onInsertAgentState2DBCompletedDelegate == null)) {
                this.onInsertAgentState2DBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertAgentState2DBCompleted);
            }
            base.InvokeAsync(this.onBeginInsertAgentState2DBDelegate, new object[] {
                        verifyCode,
                        state,
                        agentAuxState,
                        callType,
                        agTime,
                        startTime,
                        agentId,
                        trueName,
                        groupName,
                        extensionNum}, this.onEndInsertAgentState2DBDelegate, this.onInsertAgentState2DBCompletedDelegate, userState);
        }
        
        public bool UpdateAgentState2DB(string verifyCode, int state, int agentAuxState, int callType, int agTime, System.DateTime startTime, string agentId) {
            return base.Channel.UpdateAgentState2DB(verifyCode, state, agentAuxState, callType, agTime, startTime, agentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAgentState2DB(string verifyCode, int state, int agentAuxState, int callType, int agTime, System.DateTime startTime, string agentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAgentState2DB(verifyCode, state, agentAuxState, callType, agTime, startTime, agentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateAgentState2DB(System.IAsyncResult result) {
            return base.Channel.EndUpdateAgentState2DB(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAgentState2DB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            int state = ((int)(inValues[1]));
            int agentAuxState = ((int)(inValues[2]));
            int callType = ((int)(inValues[3]));
            int agTime = ((int)(inValues[4]));
            System.DateTime startTime = ((System.DateTime)(inValues[5]));
            string agentId = ((string)(inValues[6]));
            return this.BeginUpdateAgentState2DB(verifyCode, state, agentAuxState, callType, agTime, startTime, agentId, callback, asyncState);
        }
        
        private object[] OnEndUpdateAgentState2DB(System.IAsyncResult result) {
            bool retVal = this.EndUpdateAgentState2DB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateAgentState2DBCompleted(object state) {
            if ((this.UpdateAgentState2DBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAgentState2DBCompleted(this, new UpdateAgentState2DBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAgentState2DBAsync(string verifyCode, int state, int agentAuxState, int callType, int agTime, System.DateTime startTime, string agentId) {
            this.UpdateAgentState2DBAsync(verifyCode, state, agentAuxState, callType, agTime, startTime, agentId, null);
        }
        
        public void UpdateAgentState2DBAsync(string verifyCode, int state, int agentAuxState, int callType, int agTime, System.DateTime startTime, string agentId, object userState) {
            if ((this.onBeginUpdateAgentState2DBDelegate == null)) {
                this.onBeginUpdateAgentState2DBDelegate = new BeginOperationDelegate(this.OnBeginUpdateAgentState2DB);
            }
            if ((this.onEndUpdateAgentState2DBDelegate == null)) {
                this.onEndUpdateAgentState2DBDelegate = new EndOperationDelegate(this.OnEndUpdateAgentState2DB);
            }
            if ((this.onUpdateAgentState2DBCompletedDelegate == null)) {
                this.onUpdateAgentState2DBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAgentState2DBCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAgentState2DBDelegate, new object[] {
                        verifyCode,
                        state,
                        agentAuxState,
                        callType,
                        agTime,
                        startTime,
                        agentId}, this.onEndUpdateAgentState2DBDelegate, this.onUpdateAgentState2DBCompletedDelegate, userState);
        }
        
        public bool DeleteAgentState2DB(string verifyCode, string agentId) {
            return base.Channel.DeleteAgentState2DB(verifyCode, agentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteAgentState2DB(string verifyCode, string agentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAgentState2DB(verifyCode, agentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteAgentState2DB(System.IAsyncResult result) {
            return base.Channel.EndDeleteAgentState2DB(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAgentState2DB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            string agentId = ((string)(inValues[1]));
            return this.BeginDeleteAgentState2DB(verifyCode, agentId, callback, asyncState);
        }
        
        private object[] OnEndDeleteAgentState2DB(System.IAsyncResult result) {
            bool retVal = this.EndDeleteAgentState2DB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteAgentState2DBCompleted(object state) {
            if ((this.DeleteAgentState2DBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAgentState2DBCompleted(this, new DeleteAgentState2DBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAgentState2DBAsync(string verifyCode, string agentId) {
            this.DeleteAgentState2DBAsync(verifyCode, agentId, null);
        }
        
        public void DeleteAgentState2DBAsync(string verifyCode, string agentId, object userState) {
            if ((this.onBeginDeleteAgentState2DBDelegate == null)) {
                this.onBeginDeleteAgentState2DBDelegate = new BeginOperationDelegate(this.OnBeginDeleteAgentState2DB);
            }
            if ((this.onEndDeleteAgentState2DBDelegate == null)) {
                this.onEndDeleteAgentState2DBDelegate = new EndOperationDelegate(this.OnEndDeleteAgentState2DB);
            }
            if ((this.onDeleteAgentState2DBCompletedDelegate == null)) {
                this.onDeleteAgentState2DBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAgentState2DBCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAgentState2DBDelegate, new object[] {
                        verifyCode,
                        agentId}, this.onEndDeleteAgentState2DBDelegate, this.onDeleteAgentState2DBCompletedDelegate, userState);
        }
        
        public int InsertAgentStateDetail2DB(string verifyCode, int state, int agentAuxState, int callType, System.DateTime startTime, System.DateTime endTime, string trueName, string agentId, string extensionNum, int bgid) {
            return base.Channel.InsertAgentStateDetail2DB(verifyCode, state, agentAuxState, callType, startTime, endTime, trueName, agentId, extensionNum, bgid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertAgentStateDetail2DB(string verifyCode, int state, int agentAuxState, int callType, System.DateTime startTime, System.DateTime endTime, string trueName, string agentId, string extensionNum, int bgid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertAgentStateDetail2DB(verifyCode, state, agentAuxState, callType, startTime, endTime, trueName, agentId, extensionNum, bgid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndInsertAgentStateDetail2DB(System.IAsyncResult result) {
            return base.Channel.EndInsertAgentStateDetail2DB(result);
        }
        
        private System.IAsyncResult OnBeginInsertAgentStateDetail2DB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            int state = ((int)(inValues[1]));
            int agentAuxState = ((int)(inValues[2]));
            int callType = ((int)(inValues[3]));
            System.DateTime startTime = ((System.DateTime)(inValues[4]));
            System.DateTime endTime = ((System.DateTime)(inValues[5]));
            string trueName = ((string)(inValues[6]));
            string agentId = ((string)(inValues[7]));
            string extensionNum = ((string)(inValues[8]));
            int bgid = ((int)(inValues[9]));
            return this.BeginInsertAgentStateDetail2DB(verifyCode, state, agentAuxState, callType, startTime, endTime, trueName, agentId, extensionNum, bgid, callback, asyncState);
        }
        
        private object[] OnEndInsertAgentStateDetail2DB(System.IAsyncResult result) {
            int retVal = this.EndInsertAgentStateDetail2DB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertAgentStateDetail2DBCompleted(object state) {
            if ((this.InsertAgentStateDetail2DBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertAgentStateDetail2DBCompleted(this, new InsertAgentStateDetail2DBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertAgentStateDetail2DBAsync(string verifyCode, int state, int agentAuxState, int callType, System.DateTime startTime, System.DateTime endTime, string trueName, string agentId, string extensionNum, int bgid) {
            this.InsertAgentStateDetail2DBAsync(verifyCode, state, agentAuxState, callType, startTime, endTime, trueName, agentId, extensionNum, bgid, null);
        }
        
        public void InsertAgentStateDetail2DBAsync(string verifyCode, int state, int agentAuxState, int callType, System.DateTime startTime, System.DateTime endTime, string trueName, string agentId, string extensionNum, int bgid, object userState) {
            if ((this.onBeginInsertAgentStateDetail2DBDelegate == null)) {
                this.onBeginInsertAgentStateDetail2DBDelegate = new BeginOperationDelegate(this.OnBeginInsertAgentStateDetail2DB);
            }
            if ((this.onEndInsertAgentStateDetail2DBDelegate == null)) {
                this.onEndInsertAgentStateDetail2DBDelegate = new EndOperationDelegate(this.OnEndInsertAgentStateDetail2DB);
            }
            if ((this.onInsertAgentStateDetail2DBCompletedDelegate == null)) {
                this.onInsertAgentStateDetail2DBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertAgentStateDetail2DBCompleted);
            }
            base.InvokeAsync(this.onBeginInsertAgentStateDetail2DBDelegate, new object[] {
                        verifyCode,
                        state,
                        agentAuxState,
                        callType,
                        startTime,
                        endTime,
                        trueName,
                        agentId,
                        extensionNum,
                        bgid}, this.onEndInsertAgentStateDetail2DBDelegate, this.onInsertAgentStateDetail2DBCompletedDelegate, userState);
        }
        
        public bool UpdateStateDetail2DB(string verifyCode, int oid, System.DateTime endTime) {
            return base.Channel.UpdateStateDetail2DB(verifyCode, oid, endTime);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateStateDetail2DB(string verifyCode, int oid, System.DateTime endTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateStateDetail2DB(verifyCode, oid, endTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateStateDetail2DB(System.IAsyncResult result) {
            return base.Channel.EndUpdateStateDetail2DB(result);
        }
        
        private System.IAsyncResult OnBeginUpdateStateDetail2DB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            int oid = ((int)(inValues[1]));
            System.DateTime endTime = ((System.DateTime)(inValues[2]));
            return this.BeginUpdateStateDetail2DB(verifyCode, oid, endTime, callback, asyncState);
        }
        
        private object[] OnEndUpdateStateDetail2DB(System.IAsyncResult result) {
            bool retVal = this.EndUpdateStateDetail2DB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateStateDetail2DBCompleted(object state) {
            if ((this.UpdateStateDetail2DBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateStateDetail2DBCompleted(this, new UpdateStateDetail2DBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateStateDetail2DBAsync(string verifyCode, int oid, System.DateTime endTime) {
            this.UpdateStateDetail2DBAsync(verifyCode, oid, endTime, null);
        }
        
        public void UpdateStateDetail2DBAsync(string verifyCode, int oid, System.DateTime endTime, object userState) {
            if ((this.onBeginUpdateStateDetail2DBDelegate == null)) {
                this.onBeginUpdateStateDetail2DBDelegate = new BeginOperationDelegate(this.OnBeginUpdateStateDetail2DB);
            }
            if ((this.onEndUpdateStateDetail2DBDelegate == null)) {
                this.onEndUpdateStateDetail2DBDelegate = new EndOperationDelegate(this.OnEndUpdateStateDetail2DB);
            }
            if ((this.onUpdateStateDetail2DBCompletedDelegate == null)) {
                this.onUpdateStateDetail2DBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateStateDetail2DBCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateStateDetail2DBDelegate, new object[] {
                        verifyCode,
                        oid,
                        endTime}, this.onEndUpdateStateDetail2DBDelegate, this.onUpdateStateDetail2DBCompletedDelegate, userState);
        }
        
        public string UpdateLoginOffTime(string verifyCode, string agentID, System.DateTime endTime) {
            return base.Channel.UpdateLoginOffTime(verifyCode, agentID, endTime);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateLoginOffTime(string verifyCode, string agentID, System.DateTime endTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateLoginOffTime(verifyCode, agentID, endTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUpdateLoginOffTime(System.IAsyncResult result) {
            return base.Channel.EndUpdateLoginOffTime(result);
        }
        
        private System.IAsyncResult OnBeginUpdateLoginOffTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            string agentID = ((string)(inValues[1]));
            System.DateTime endTime = ((System.DateTime)(inValues[2]));
            return this.BeginUpdateLoginOffTime(verifyCode, agentID, endTime, callback, asyncState);
        }
        
        private object[] OnEndUpdateLoginOffTime(System.IAsyncResult result) {
            string retVal = this.EndUpdateLoginOffTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateLoginOffTimeCompleted(object state) {
            if ((this.UpdateLoginOffTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateLoginOffTimeCompleted(this, new UpdateLoginOffTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateLoginOffTimeAsync(string verifyCode, string agentID, System.DateTime endTime) {
            this.UpdateLoginOffTimeAsync(verifyCode, agentID, endTime, null);
        }
        
        public void UpdateLoginOffTimeAsync(string verifyCode, string agentID, System.DateTime endTime, object userState) {
            if ((this.onBeginUpdateLoginOffTimeDelegate == null)) {
                this.onBeginUpdateLoginOffTimeDelegate = new BeginOperationDelegate(this.OnBeginUpdateLoginOffTime);
            }
            if ((this.onEndUpdateLoginOffTimeDelegate == null)) {
                this.onEndUpdateLoginOffTimeDelegate = new EndOperationDelegate(this.OnEndUpdateLoginOffTime);
            }
            if ((this.onUpdateLoginOffTimeCompletedDelegate == null)) {
                this.onUpdateLoginOffTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateLoginOffTimeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateLoginOffTimeDelegate, new object[] {
                        verifyCode,
                        agentID,
                        endTime}, this.onEndUpdateLoginOffTimeDelegate, this.onUpdateLoginOffTimeCompletedDelegate, userState);
        }
        
        public string GetUserGroupNamesStr(string verifyCode, int userId) {
            return base.Channel.GetUserGroupNamesStr(verifyCode, userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserGroupNamesStr(string verifyCode, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserGroupNamesStr(verifyCode, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetUserGroupNamesStr(System.IAsyncResult result) {
            return base.Channel.EndGetUserGroupNamesStr(result);
        }
        
        private System.IAsyncResult OnBeginGetUserGroupNamesStr(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            int userId = ((int)(inValues[1]));
            return this.BeginGetUserGroupNamesStr(verifyCode, userId, callback, asyncState);
        }
        
        private object[] OnEndGetUserGroupNamesStr(System.IAsyncResult result) {
            string retVal = this.EndGetUserGroupNamesStr(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserGroupNamesStrCompleted(object state) {
            if ((this.GetUserGroupNamesStrCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserGroupNamesStrCompleted(this, new GetUserGroupNamesStrCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserGroupNamesStrAsync(string verifyCode, int userId) {
            this.GetUserGroupNamesStrAsync(verifyCode, userId, null);
        }
        
        public void GetUserGroupNamesStrAsync(string verifyCode, int userId, object userState) {
            if ((this.onBeginGetUserGroupNamesStrDelegate == null)) {
                this.onBeginGetUserGroupNamesStrDelegate = new BeginOperationDelegate(this.OnBeginGetUserGroupNamesStr);
            }
            if ((this.onEndGetUserGroupNamesStrDelegate == null)) {
                this.onEndGetUserGroupNamesStrDelegate = new EndOperationDelegate(this.OnEndGetUserGroupNamesStr);
            }
            if ((this.onGetUserGroupNamesStrCompletedDelegate == null)) {
                this.onGetUserGroupNamesStrCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserGroupNamesStrCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserGroupNamesStrDelegate, new object[] {
                        verifyCode,
                        userId}, this.onEndGetUserGroupNamesStrDelegate, this.onGetUserGroupNamesStrCompletedDelegate, userState);
        }
        
        public string GetBGNameAndOutNum(string verifyCode, int userId) {
            return base.Channel.GetBGNameAndOutNum(verifyCode, userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBGNameAndOutNum(string verifyCode, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBGNameAndOutNum(verifyCode, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetBGNameAndOutNum(System.IAsyncResult result) {
            return base.Channel.EndGetBGNameAndOutNum(result);
        }
        
        private System.IAsyncResult OnBeginGetBGNameAndOutNum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            int userId = ((int)(inValues[1]));
            return this.BeginGetBGNameAndOutNum(verifyCode, userId, callback, asyncState);
        }
        
        private object[] OnEndGetBGNameAndOutNum(System.IAsyncResult result) {
            string retVal = this.EndGetBGNameAndOutNum(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBGNameAndOutNumCompleted(object state) {
            if ((this.GetBGNameAndOutNumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBGNameAndOutNumCompleted(this, new GetBGNameAndOutNumCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBGNameAndOutNumAsync(string verifyCode, int userId) {
            this.GetBGNameAndOutNumAsync(verifyCode, userId, null);
        }
        
        public void GetBGNameAndOutNumAsync(string verifyCode, int userId, object userState) {
            if ((this.onBeginGetBGNameAndOutNumDelegate == null)) {
                this.onBeginGetBGNameAndOutNumDelegate = new BeginOperationDelegate(this.OnBeginGetBGNameAndOutNum);
            }
            if ((this.onEndGetBGNameAndOutNumDelegate == null)) {
                this.onEndGetBGNameAndOutNumDelegate = new EndOperationDelegate(this.OnEndGetBGNameAndOutNum);
            }
            if ((this.onGetBGNameAndOutNumCompletedDelegate == null)) {
                this.onGetBGNameAndOutNumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBGNameAndOutNumCompleted);
            }
            base.InvokeAsync(this.onBeginGetBGNameAndOutNumDelegate, new object[] {
                        verifyCode,
                        userId}, this.onEndGetBGNameAndOutNumDelegate, this.onGetBGNameAndOutNumCompletedDelegate, userState);
        }
        
        public bool GetAgentNumsOnLine(out int[] iarray, out string errormsg, string verifyCode) {
            return base.Channel.GetAgentNumsOnLine(out iarray, out errormsg, verifyCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAgentNumsOnLine(string verifyCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAgentNumsOnLine(verifyCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetAgentNumsOnLine(out int[] iarray, out string errormsg, System.IAsyncResult result) {
            return base.Channel.EndGetAgentNumsOnLine(out iarray, out errormsg, result);
        }
        
        private System.IAsyncResult OnBeginGetAgentNumsOnLine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            return this.BeginGetAgentNumsOnLine(verifyCode, callback, asyncState);
        }
        
        private object[] OnEndGetAgentNumsOnLine(System.IAsyncResult result) {
            int[] iarray = this.GetDefaultValueForInitialization<int[]>();
            string errormsg = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndGetAgentNumsOnLine(out iarray, out errormsg, result);
            return new object[] {
                    iarray,
                    errormsg,
                    retVal};
        }
        
        private void OnGetAgentNumsOnLineCompleted(object state) {
            if ((this.GetAgentNumsOnLineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAgentNumsOnLineCompleted(this, new GetAgentNumsOnLineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAgentNumsOnLineAsync(string verifyCode) {
            this.GetAgentNumsOnLineAsync(verifyCode, null);
        }
        
        public void GetAgentNumsOnLineAsync(string verifyCode, object userState) {
            if ((this.onBeginGetAgentNumsOnLineDelegate == null)) {
                this.onBeginGetAgentNumsOnLineDelegate = new BeginOperationDelegate(this.OnBeginGetAgentNumsOnLine);
            }
            if ((this.onEndGetAgentNumsOnLineDelegate == null)) {
                this.onEndGetAgentNumsOnLineDelegate = new EndOperationDelegate(this.OnEndGetAgentNumsOnLine);
            }
            if ((this.onGetAgentNumsOnLineCompletedDelegate == null)) {
                this.onGetAgentNumsOnLineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAgentNumsOnLineCompleted);
            }
            base.InvokeAsync(this.onBeginGetAgentNumsOnLineDelegate, new object[] {
                        verifyCode}, this.onEndGetAgentNumsOnLineDelegate, this.onGetAgentNumsOnLineCompletedDelegate, userState);
        }
        
        public bool GetAgentStateOnLine(out System.Data.DataTable dt, out string errormsg, string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender) {
            return base.Channel.GetAgentStateOnLine(out dt, out errormsg, verifyCode, vender);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAgentStateOnLine(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAgentStateOnLine(verifyCode, vender, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetAgentStateOnLine(out System.Data.DataTable dt, out string errormsg, System.IAsyncResult result) {
            return base.Channel.EndGetAgentStateOnLine(out dt, out errormsg, result);
        }
        
        private System.IAsyncResult OnBeginGetAgentStateOnLine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender = ((CC2015_HollyFormsApp.CCWebAgentTimeState.Vender)(inValues[1]));
            return this.BeginGetAgentStateOnLine(verifyCode, vender, callback, asyncState);
        }
        
        private object[] OnEndGetAgentStateOnLine(System.IAsyncResult result) {
            System.Data.DataTable dt = this.GetDefaultValueForInitialization<System.Data.DataTable>();
            string errormsg = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndGetAgentStateOnLine(out dt, out errormsg, result);
            return new object[] {
                    dt,
                    errormsg,
                    retVal};
        }
        
        private void OnGetAgentStateOnLineCompleted(object state) {
            if ((this.GetAgentStateOnLineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAgentStateOnLineCompleted(this, new GetAgentStateOnLineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAgentStateOnLineAsync(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender) {
            this.GetAgentStateOnLineAsync(verifyCode, vender, null);
        }
        
        public void GetAgentStateOnLineAsync(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender, object userState) {
            if ((this.onBeginGetAgentStateOnLineDelegate == null)) {
                this.onBeginGetAgentStateOnLineDelegate = new BeginOperationDelegate(this.OnBeginGetAgentStateOnLine);
            }
            if ((this.onEndGetAgentStateOnLineDelegate == null)) {
                this.onEndGetAgentStateOnLineDelegate = new EndOperationDelegate(this.OnEndGetAgentStateOnLine);
            }
            if ((this.onGetAgentStateOnLineCompletedDelegate == null)) {
                this.onGetAgentStateOnLineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAgentStateOnLineCompleted);
            }
            base.InvokeAsync(this.onBeginGetAgentStateOnLineDelegate, new object[] {
                        verifyCode,
                        vender}, this.onEndGetAgentStateOnLineDelegate, this.onGetAgentStateOnLineCompletedDelegate, userState);
        }
        
        public bool GetAgentStateWorking(out System.Data.DataTable dt, out string errormsg, string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender) {
            return base.Channel.GetAgentStateWorking(out dt, out errormsg, verifyCode, vender);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAgentStateWorking(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAgentStateWorking(verifyCode, vender, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetAgentStateWorking(out System.Data.DataTable dt, out string errormsg, System.IAsyncResult result) {
            return base.Channel.EndGetAgentStateWorking(out dt, out errormsg, result);
        }
        
        private System.IAsyncResult OnBeginGetAgentStateWorking(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender = ((CC2015_HollyFormsApp.CCWebAgentTimeState.Vender)(inValues[1]));
            return this.BeginGetAgentStateWorking(verifyCode, vender, callback, asyncState);
        }
        
        private object[] OnEndGetAgentStateWorking(System.IAsyncResult result) {
            System.Data.DataTable dt = this.GetDefaultValueForInitialization<System.Data.DataTable>();
            string errormsg = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndGetAgentStateWorking(out dt, out errormsg, result);
            return new object[] {
                    dt,
                    errormsg,
                    retVal};
        }
        
        private void OnGetAgentStateWorkingCompleted(object state) {
            if ((this.GetAgentStateWorkingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAgentStateWorkingCompleted(this, new GetAgentStateWorkingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAgentStateWorkingAsync(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender) {
            this.GetAgentStateWorkingAsync(verifyCode, vender, null);
        }
        
        public void GetAgentStateWorkingAsync(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender, object userState) {
            if ((this.onBeginGetAgentStateWorkingDelegate == null)) {
                this.onBeginGetAgentStateWorkingDelegate = new BeginOperationDelegate(this.OnBeginGetAgentStateWorking);
            }
            if ((this.onEndGetAgentStateWorkingDelegate == null)) {
                this.onEndGetAgentStateWorkingDelegate = new EndOperationDelegate(this.OnEndGetAgentStateWorking);
            }
            if ((this.onGetAgentStateWorkingCompletedDelegate == null)) {
                this.onGetAgentStateWorkingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAgentStateWorkingCompleted);
            }
            base.InvokeAsync(this.onBeginGetAgentStateWorkingDelegate, new object[] {
                        verifyCode,
                        vender}, this.onEndGetAgentStateWorkingDelegate, this.onGetAgentStateWorkingCompletedDelegate, userState);
        }
        
        public bool IsCanListenAgent(string verifyCode, int userID, string sysID) {
            return base.Channel.IsCanListenAgent(verifyCode, userID, sysID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsCanListenAgent(string verifyCode, int userID, string sysID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsCanListenAgent(verifyCode, userID, sysID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsCanListenAgent(System.IAsyncResult result) {
            return base.Channel.EndIsCanListenAgent(result);
        }
        
        private System.IAsyncResult OnBeginIsCanListenAgent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            int userID = ((int)(inValues[1]));
            string sysID = ((string)(inValues[2]));
            return this.BeginIsCanListenAgent(verifyCode, userID, sysID, callback, asyncState);
        }
        
        private object[] OnEndIsCanListenAgent(System.IAsyncResult result) {
            bool retVal = this.EndIsCanListenAgent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsCanListenAgentCompleted(object state) {
            if ((this.IsCanListenAgentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsCanListenAgentCompleted(this, new IsCanListenAgentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsCanListenAgentAsync(string verifyCode, int userID, string sysID) {
            this.IsCanListenAgentAsync(verifyCode, userID, sysID, null);
        }
        
        public void IsCanListenAgentAsync(string verifyCode, int userID, string sysID, object userState) {
            if ((this.onBeginIsCanListenAgentDelegate == null)) {
                this.onBeginIsCanListenAgentDelegate = new BeginOperationDelegate(this.OnBeginIsCanListenAgent);
            }
            if ((this.onEndIsCanListenAgentDelegate == null)) {
                this.onEndIsCanListenAgentDelegate = new EndOperationDelegate(this.OnEndIsCanListenAgent);
            }
            if ((this.onIsCanListenAgentCompletedDelegate == null)) {
                this.onIsCanListenAgentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsCanListenAgentCompleted);
            }
            base.InvokeAsync(this.onBeginIsCanListenAgentDelegate, new object[] {
                        verifyCode,
                        userID,
                        sysID}, this.onEndIsCanListenAgentDelegate, this.onIsCanListenAgentCompletedDelegate, userState);
        }
        
        public int GetUserIDByNameDomainAccount(string verifyCode, string domainAccount) {
            return base.Channel.GetUserIDByNameDomainAccount(verifyCode, domainAccount);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserIDByNameDomainAccount(string verifyCode, string domainAccount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserIDByNameDomainAccount(verifyCode, domainAccount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetUserIDByNameDomainAccount(System.IAsyncResult result) {
            return base.Channel.EndGetUserIDByNameDomainAccount(result);
        }
        
        private System.IAsyncResult OnBeginGetUserIDByNameDomainAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            string domainAccount = ((string)(inValues[1]));
            return this.BeginGetUserIDByNameDomainAccount(verifyCode, domainAccount, callback, asyncState);
        }
        
        private object[] OnEndGetUserIDByNameDomainAccount(System.IAsyncResult result) {
            int retVal = this.EndGetUserIDByNameDomainAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserIDByNameDomainAccountCompleted(object state) {
            if ((this.GetUserIDByNameDomainAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserIDByNameDomainAccountCompleted(this, new GetUserIDByNameDomainAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserIDByNameDomainAccountAsync(string verifyCode, string domainAccount) {
            this.GetUserIDByNameDomainAccountAsync(verifyCode, domainAccount, null);
        }
        
        public void GetUserIDByNameDomainAccountAsync(string verifyCode, string domainAccount, object userState) {
            if ((this.onBeginGetUserIDByNameDomainAccountDelegate == null)) {
                this.onBeginGetUserIDByNameDomainAccountDelegate = new BeginOperationDelegate(this.OnBeginGetUserIDByNameDomainAccount);
            }
            if ((this.onEndGetUserIDByNameDomainAccountDelegate == null)) {
                this.onEndGetUserIDByNameDomainAccountDelegate = new EndOperationDelegate(this.OnEndGetUserIDByNameDomainAccount);
            }
            if ((this.onGetUserIDByNameDomainAccountCompletedDelegate == null)) {
                this.onGetUserIDByNameDomainAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserIDByNameDomainAccountCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserIDByNameDomainAccountDelegate, new object[] {
                        verifyCode,
                        domainAccount}, this.onEndGetUserIDByNameDomainAccountDelegate, this.onGetUserIDByNameDomainAccountCompletedDelegate, userState);
        }
        
        public int GetUserIDByUserName(string verifyCode, string username) {
            return base.Channel.GetUserIDByUserName(verifyCode, username);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserIDByUserName(string verifyCode, string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserIDByUserName(verifyCode, username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetUserIDByUserName(System.IAsyncResult result) {
            return base.Channel.EndGetUserIDByUserName(result);
        }
        
        private System.IAsyncResult OnBeginGetUserIDByUserName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            string username = ((string)(inValues[1]));
            return this.BeginGetUserIDByUserName(verifyCode, username, callback, asyncState);
        }
        
        private object[] OnEndGetUserIDByUserName(System.IAsyncResult result) {
            int retVal = this.EndGetUserIDByUserName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserIDByUserNameCompleted(object state) {
            if ((this.GetUserIDByUserNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserIDByUserNameCompleted(this, new GetUserIDByUserNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserIDByUserNameAsync(string verifyCode, string username) {
            this.GetUserIDByUserNameAsync(verifyCode, username, null);
        }
        
        public void GetUserIDByUserNameAsync(string verifyCode, string username, object userState) {
            if ((this.onBeginGetUserIDByUserNameDelegate == null)) {
                this.onBeginGetUserIDByUserNameDelegate = new BeginOperationDelegate(this.OnBeginGetUserIDByUserName);
            }
            if ((this.onEndGetUserIDByUserNameDelegate == null)) {
                this.onEndGetUserIDByUserNameDelegate = new EndOperationDelegate(this.OnEndGetUserIDByUserName);
            }
            if ((this.onGetUserIDByUserNameCompletedDelegate == null)) {
                this.onGetUserIDByUserNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserIDByUserNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserIDByUserNameDelegate, new object[] {
                        verifyCode,
                        username}, this.onEndGetUserIDByUserNameDelegate, this.onGetUserIDByUserNameCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetUserSkillGroupIdAndPriorty(string verifyCode, int userId) {
            return base.Channel.GetUserSkillGroupIdAndPriorty(verifyCode, userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserSkillGroupIdAndPriorty(string verifyCode, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserSkillGroupIdAndPriorty(verifyCode, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetUserSkillGroupIdAndPriorty(System.IAsyncResult result) {
            return base.Channel.EndGetUserSkillGroupIdAndPriorty(result);
        }
        
        private System.IAsyncResult OnBeginGetUserSkillGroupIdAndPriorty(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            int userId = ((int)(inValues[1]));
            return this.BeginGetUserSkillGroupIdAndPriorty(verifyCode, userId, callback, asyncState);
        }
        
        private object[] OnEndGetUserSkillGroupIdAndPriorty(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetUserSkillGroupIdAndPriorty(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserSkillGroupIdAndPriortyCompleted(object state) {
            if ((this.GetUserSkillGroupIdAndPriortyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserSkillGroupIdAndPriortyCompleted(this, new GetUserSkillGroupIdAndPriortyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserSkillGroupIdAndPriortyAsync(string verifyCode, int userId) {
            this.GetUserSkillGroupIdAndPriortyAsync(verifyCode, userId, null);
        }
        
        public void GetUserSkillGroupIdAndPriortyAsync(string verifyCode, int userId, object userState) {
            if ((this.onBeginGetUserSkillGroupIdAndPriortyDelegate == null)) {
                this.onBeginGetUserSkillGroupIdAndPriortyDelegate = new BeginOperationDelegate(this.OnBeginGetUserSkillGroupIdAndPriorty);
            }
            if ((this.onEndGetUserSkillGroupIdAndPriortyDelegate == null)) {
                this.onEndGetUserSkillGroupIdAndPriortyDelegate = new EndOperationDelegate(this.OnEndGetUserSkillGroupIdAndPriorty);
            }
            if ((this.onGetUserSkillGroupIdAndPriortyCompletedDelegate == null)) {
                this.onGetUserSkillGroupIdAndPriortyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserSkillGroupIdAndPriortyCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserSkillGroupIdAndPriortyDelegate, new object[] {
                        verifyCode,
                        userId}, this.onEndGetUserSkillGroupIdAndPriortyDelegate, this.onGetUserSkillGroupIdAndPriortyCompletedDelegate, userState);
        }
        
        public string GetManufactureSkillGroupIDBySGID(string verifyCode, int sgID) {
            return base.Channel.GetManufactureSkillGroupIDBySGID(verifyCode, sgID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetManufactureSkillGroupIDBySGID(string verifyCode, int sgID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetManufactureSkillGroupIDBySGID(verifyCode, sgID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetManufactureSkillGroupIDBySGID(System.IAsyncResult result) {
            return base.Channel.EndGetManufactureSkillGroupIDBySGID(result);
        }
        
        private System.IAsyncResult OnBeginGetManufactureSkillGroupIDBySGID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            int sgID = ((int)(inValues[1]));
            return this.BeginGetManufactureSkillGroupIDBySGID(verifyCode, sgID, callback, asyncState);
        }
        
        private object[] OnEndGetManufactureSkillGroupIDBySGID(System.IAsyncResult result) {
            string retVal = this.EndGetManufactureSkillGroupIDBySGID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetManufactureSkillGroupIDBySGIDCompleted(object state) {
            if ((this.GetManufactureSkillGroupIDBySGIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetManufactureSkillGroupIDBySGIDCompleted(this, new GetManufactureSkillGroupIDBySGIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetManufactureSkillGroupIDBySGIDAsync(string verifyCode, int sgID) {
            this.GetManufactureSkillGroupIDBySGIDAsync(verifyCode, sgID, null);
        }
        
        public void GetManufactureSkillGroupIDBySGIDAsync(string verifyCode, int sgID, object userState) {
            if ((this.onBeginGetManufactureSkillGroupIDBySGIDDelegate == null)) {
                this.onBeginGetManufactureSkillGroupIDBySGIDDelegate = new BeginOperationDelegate(this.OnBeginGetManufactureSkillGroupIDBySGID);
            }
            if ((this.onEndGetManufactureSkillGroupIDBySGIDDelegate == null)) {
                this.onEndGetManufactureSkillGroupIDBySGIDDelegate = new EndOperationDelegate(this.OnEndGetManufactureSkillGroupIDBySGID);
            }
            if ((this.onGetManufactureSkillGroupIDBySGIDCompletedDelegate == null)) {
                this.onGetManufactureSkillGroupIDBySGIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetManufactureSkillGroupIDBySGIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetManufactureSkillGroupIDBySGIDDelegate, new object[] {
                        verifyCode,
                        sgID}, this.onEndGetManufactureSkillGroupIDBySGIDDelegate, this.onGetManufactureSkillGroupIDBySGIDCompletedDelegate, userState);
        }
        
        public string GetSkillNameByMID(string verifyCode, string mID) {
            return base.Channel.GetSkillNameByMID(verifyCode, mID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSkillNameByMID(string verifyCode, string mID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSkillNameByMID(verifyCode, mID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSkillNameByMID(System.IAsyncResult result) {
            return base.Channel.EndGetSkillNameByMID(result);
        }
        
        private System.IAsyncResult OnBeginGetSkillNameByMID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            string mID = ((string)(inValues[1]));
            return this.BeginGetSkillNameByMID(verifyCode, mID, callback, asyncState);
        }
        
        private object[] OnEndGetSkillNameByMID(System.IAsyncResult result) {
            string retVal = this.EndGetSkillNameByMID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSkillNameByMIDCompleted(object state) {
            if ((this.GetSkillNameByMIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSkillNameByMIDCompleted(this, new GetSkillNameByMIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSkillNameByMIDAsync(string verifyCode, string mID) {
            this.GetSkillNameByMIDAsync(verifyCode, mID, null);
        }
        
        public void GetSkillNameByMIDAsync(string verifyCode, string mID, object userState) {
            if ((this.onBeginGetSkillNameByMIDDelegate == null)) {
                this.onBeginGetSkillNameByMIDDelegate = new BeginOperationDelegate(this.OnBeginGetSkillNameByMID);
            }
            if ((this.onEndGetSkillNameByMIDDelegate == null)) {
                this.onEndGetSkillNameByMIDDelegate = new EndOperationDelegate(this.OnEndGetSkillNameByMID);
            }
            if ((this.onGetSkillNameByMIDCompletedDelegate == null)) {
                this.onGetSkillNameByMIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSkillNameByMIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetSkillNameByMIDDelegate, new object[] {
                        verifyCode,
                        mID}, this.onEndGetSkillNameByMIDDelegate, this.onGetSkillNameByMIDCompletedDelegate, userState);
        }
        
        public string GetSkillNameBySGID(string verifyCode, int sgID) {
            return base.Channel.GetSkillNameBySGID(verifyCode, sgID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSkillNameBySGID(string verifyCode, int sgID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSkillNameBySGID(verifyCode, sgID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSkillNameBySGID(System.IAsyncResult result) {
            return base.Channel.EndGetSkillNameBySGID(result);
        }
        
        private System.IAsyncResult OnBeginGetSkillNameBySGID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            int sgID = ((int)(inValues[1]));
            return this.BeginGetSkillNameBySGID(verifyCode, sgID, callback, asyncState);
        }
        
        private object[] OnEndGetSkillNameBySGID(System.IAsyncResult result) {
            string retVal = this.EndGetSkillNameBySGID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSkillNameBySGIDCompleted(object state) {
            if ((this.GetSkillNameBySGIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSkillNameBySGIDCompleted(this, new GetSkillNameBySGIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSkillNameBySGIDAsync(string verifyCode, int sgID) {
            this.GetSkillNameBySGIDAsync(verifyCode, sgID, null);
        }
        
        public void GetSkillNameBySGIDAsync(string verifyCode, int sgID, object userState) {
            if ((this.onBeginGetSkillNameBySGIDDelegate == null)) {
                this.onBeginGetSkillNameBySGIDDelegate = new BeginOperationDelegate(this.OnBeginGetSkillNameBySGID);
            }
            if ((this.onEndGetSkillNameBySGIDDelegate == null)) {
                this.onEndGetSkillNameBySGIDDelegate = new EndOperationDelegate(this.OnEndGetSkillNameBySGID);
            }
            if ((this.onGetSkillNameBySGIDCompletedDelegate == null)) {
                this.onGetSkillNameBySGIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSkillNameBySGIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetSkillNameBySGIDDelegate, new object[] {
                        verifyCode,
                        sgID}, this.onEndGetSkillNameBySGIDDelegate, this.onGetSkillNameBySGIDCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetHotlineSkillGroupByTelMainNum(string verifyCode, string tel) {
            return base.Channel.GetHotlineSkillGroupByTelMainNum(verifyCode, tel);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHotlineSkillGroupByTelMainNum(string verifyCode, string tel, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHotlineSkillGroupByTelMainNum(verifyCode, tel, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetHotlineSkillGroupByTelMainNum(System.IAsyncResult result) {
            return base.Channel.EndGetHotlineSkillGroupByTelMainNum(result);
        }
        
        private System.IAsyncResult OnBeginGetHotlineSkillGroupByTelMainNum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            string tel = ((string)(inValues[1]));
            return this.BeginGetHotlineSkillGroupByTelMainNum(verifyCode, tel, callback, asyncState);
        }
        
        private object[] OnEndGetHotlineSkillGroupByTelMainNum(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetHotlineSkillGroupByTelMainNum(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHotlineSkillGroupByTelMainNumCompleted(object state) {
            if ((this.GetHotlineSkillGroupByTelMainNumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHotlineSkillGroupByTelMainNumCompleted(this, new GetHotlineSkillGroupByTelMainNumCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHotlineSkillGroupByTelMainNumAsync(string verifyCode, string tel) {
            this.GetHotlineSkillGroupByTelMainNumAsync(verifyCode, tel, null);
        }
        
        public void GetHotlineSkillGroupByTelMainNumAsync(string verifyCode, string tel, object userState) {
            if ((this.onBeginGetHotlineSkillGroupByTelMainNumDelegate == null)) {
                this.onBeginGetHotlineSkillGroupByTelMainNumDelegate = new BeginOperationDelegate(this.OnBeginGetHotlineSkillGroupByTelMainNum);
            }
            if ((this.onEndGetHotlineSkillGroupByTelMainNumDelegate == null)) {
                this.onEndGetHotlineSkillGroupByTelMainNumDelegate = new EndOperationDelegate(this.OnEndGetHotlineSkillGroupByTelMainNum);
            }
            if ((this.onGetHotlineSkillGroupByTelMainNumCompletedDelegate == null)) {
                this.onGetHotlineSkillGroupByTelMainNumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHotlineSkillGroupByTelMainNumCompleted);
            }
            base.InvokeAsync(this.onBeginGetHotlineSkillGroupByTelMainNumDelegate, new object[] {
                        verifyCode,
                        tel}, this.onEndGetHotlineSkillGroupByTelMainNumDelegate, this.onGetHotlineSkillGroupByTelMainNumCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetAgentStateOnLineByWhere(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender, string where) {
            return base.Channel.GetAgentStateOnLineByWhere(verifyCode, vender, where);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAgentStateOnLineByWhere(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender, string where, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAgentStateOnLineByWhere(verifyCode, vender, where, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetAgentStateOnLineByWhere(System.IAsyncResult result) {
            return base.Channel.EndGetAgentStateOnLineByWhere(result);
        }
        
        private System.IAsyncResult OnBeginGetAgentStateOnLineByWhere(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender = ((CC2015_HollyFormsApp.CCWebAgentTimeState.Vender)(inValues[1]));
            string where = ((string)(inValues[2]));
            return this.BeginGetAgentStateOnLineByWhere(verifyCode, vender, where, callback, asyncState);
        }
        
        private object[] OnEndGetAgentStateOnLineByWhere(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetAgentStateOnLineByWhere(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAgentStateOnLineByWhereCompleted(object state) {
            if ((this.GetAgentStateOnLineByWhereCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAgentStateOnLineByWhereCompleted(this, new GetAgentStateOnLineByWhereCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAgentStateOnLineByWhereAsync(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender, string where) {
            this.GetAgentStateOnLineByWhereAsync(verifyCode, vender, where, null);
        }
        
        public void GetAgentStateOnLineByWhereAsync(string verifyCode, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vender, string where, object userState) {
            if ((this.onBeginGetAgentStateOnLineByWhereDelegate == null)) {
                this.onBeginGetAgentStateOnLineByWhereDelegate = new BeginOperationDelegate(this.OnBeginGetAgentStateOnLineByWhere);
            }
            if ((this.onEndGetAgentStateOnLineByWhereDelegate == null)) {
                this.onEndGetAgentStateOnLineByWhereDelegate = new EndOperationDelegate(this.OnEndGetAgentStateOnLineByWhere);
            }
            if ((this.onGetAgentStateOnLineByWhereCompletedDelegate == null)) {
                this.onGetAgentStateOnLineByWhereCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAgentStateOnLineByWhereCompleted);
            }
            base.InvokeAsync(this.onBeginGetAgentStateOnLineByWhereDelegate, new object[] {
                        verifyCode,
                        vender,
                        where}, this.onEndGetAgentStateOnLineByWhereDelegate, this.onGetAgentStateOnLineByWhereCompletedDelegate, userState);
        }
        
        public System.Data.DataTable GetManageBusinessGroups(string verifyCode, int userId) {
            return base.Channel.GetManageBusinessGroups(verifyCode, userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetManageBusinessGroups(string verifyCode, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetManageBusinessGroups(verifyCode, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndGetManageBusinessGroups(System.IAsyncResult result) {
            return base.Channel.EndGetManageBusinessGroups(result);
        }
        
        private System.IAsyncResult OnBeginGetManageBusinessGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            int userId = ((int)(inValues[1]));
            return this.BeginGetManageBusinessGroups(verifyCode, userId, callback, asyncState);
        }
        
        private object[] OnEndGetManageBusinessGroups(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndGetManageBusinessGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetManageBusinessGroupsCompleted(object state) {
            if ((this.GetManageBusinessGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetManageBusinessGroupsCompleted(this, new GetManageBusinessGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetManageBusinessGroupsAsync(string verifyCode, int userId) {
            this.GetManageBusinessGroupsAsync(verifyCode, userId, null);
        }
        
        public void GetManageBusinessGroupsAsync(string verifyCode, int userId, object userState) {
            if ((this.onBeginGetManageBusinessGroupsDelegate == null)) {
                this.onBeginGetManageBusinessGroupsDelegate = new BeginOperationDelegate(this.OnBeginGetManageBusinessGroups);
            }
            if ((this.onEndGetManageBusinessGroupsDelegate == null)) {
                this.onEndGetManageBusinessGroupsDelegate = new EndOperationDelegate(this.OnEndGetManageBusinessGroups);
            }
            if ((this.onGetManageBusinessGroupsCompletedDelegate == null)) {
                this.onGetManageBusinessGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetManageBusinessGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginGetManageBusinessGroupsDelegate, new object[] {
                        verifyCode,
                        userId}, this.onEndGetManageBusinessGroupsDelegate, this.onGetManageBusinessGroupsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetAllEmployeeAgentAndBusinessGroup(string verifyCode) {
            return base.Channel.GetAllEmployeeAgentAndBusinessGroup(verifyCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllEmployeeAgentAndBusinessGroup(string verifyCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllEmployeeAgentAndBusinessGroup(verifyCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetAllEmployeeAgentAndBusinessGroup(System.IAsyncResult result) {
            return base.Channel.EndGetAllEmployeeAgentAndBusinessGroup(result);
        }
        
        private System.IAsyncResult OnBeginGetAllEmployeeAgentAndBusinessGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            return this.BeginGetAllEmployeeAgentAndBusinessGroup(verifyCode, callback, asyncState);
        }
        
        private object[] OnEndGetAllEmployeeAgentAndBusinessGroup(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetAllEmployeeAgentAndBusinessGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllEmployeeAgentAndBusinessGroupCompleted(object state) {
            if ((this.GetAllEmployeeAgentAndBusinessGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllEmployeeAgentAndBusinessGroupCompleted(this, new GetAllEmployeeAgentAndBusinessGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllEmployeeAgentAndBusinessGroupAsync(string verifyCode) {
            this.GetAllEmployeeAgentAndBusinessGroupAsync(verifyCode, null);
        }
        
        public void GetAllEmployeeAgentAndBusinessGroupAsync(string verifyCode, object userState) {
            if ((this.onBeginGetAllEmployeeAgentAndBusinessGroupDelegate == null)) {
                this.onBeginGetAllEmployeeAgentAndBusinessGroupDelegate = new BeginOperationDelegate(this.OnBeginGetAllEmployeeAgentAndBusinessGroup);
            }
            if ((this.onEndGetAllEmployeeAgentAndBusinessGroupDelegate == null)) {
                this.onEndGetAllEmployeeAgentAndBusinessGroupDelegate = new EndOperationDelegate(this.OnEndGetAllEmployeeAgentAndBusinessGroup);
            }
            if ((this.onGetAllEmployeeAgentAndBusinessGroupCompletedDelegate == null)) {
                this.onGetAllEmployeeAgentAndBusinessGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllEmployeeAgentAndBusinessGroupCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllEmployeeAgentAndBusinessGroupDelegate, new object[] {
                        verifyCode}, this.onEndGetAllEmployeeAgentAndBusinessGroupDelegate, this.onGetAllEmployeeAgentAndBusinessGroupCompletedDelegate, userState);
        }
        
        public int InsertListenAgentLog(string verifyCode, int listenUserID, string listenUserName, string listenNum, string listenExtensionNum, int listenOper, int agentUserID, string agentUserName, string agentNum, string agentExtensionNum, int agentStatus, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vendor, string remark) {
            return base.Channel.InsertListenAgentLog(verifyCode, listenUserID, listenUserName, listenNum, listenExtensionNum, listenOper, agentUserID, agentUserName, agentNum, agentExtensionNum, agentStatus, vendor, remark);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertListenAgentLog(string verifyCode, int listenUserID, string listenUserName, string listenNum, string listenExtensionNum, int listenOper, int agentUserID, string agentUserName, string agentNum, string agentExtensionNum, int agentStatus, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vendor, string remark, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertListenAgentLog(verifyCode, listenUserID, listenUserName, listenNum, listenExtensionNum, listenOper, agentUserID, agentUserName, agentNum, agentExtensionNum, agentStatus, vendor, remark, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndInsertListenAgentLog(System.IAsyncResult result) {
            return base.Channel.EndInsertListenAgentLog(result);
        }
        
        private System.IAsyncResult OnBeginInsertListenAgentLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            int listenUserID = ((int)(inValues[1]));
            string listenUserName = ((string)(inValues[2]));
            string listenNum = ((string)(inValues[3]));
            string listenExtensionNum = ((string)(inValues[4]));
            int listenOper = ((int)(inValues[5]));
            int agentUserID = ((int)(inValues[6]));
            string agentUserName = ((string)(inValues[7]));
            string agentNum = ((string)(inValues[8]));
            string agentExtensionNum = ((string)(inValues[9]));
            int agentStatus = ((int)(inValues[10]));
            CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vendor = ((CC2015_HollyFormsApp.CCWebAgentTimeState.Vender)(inValues[11]));
            string remark = ((string)(inValues[12]));
            return this.BeginInsertListenAgentLog(verifyCode, listenUserID, listenUserName, listenNum, listenExtensionNum, listenOper, agentUserID, agentUserName, agentNum, agentExtensionNum, agentStatus, vendor, remark, callback, asyncState);
        }
        
        private object[] OnEndInsertListenAgentLog(System.IAsyncResult result) {
            int retVal = this.EndInsertListenAgentLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertListenAgentLogCompleted(object state) {
            if ((this.InsertListenAgentLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertListenAgentLogCompleted(this, new InsertListenAgentLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertListenAgentLogAsync(string verifyCode, int listenUserID, string listenUserName, string listenNum, string listenExtensionNum, int listenOper, int agentUserID, string agentUserName, string agentNum, string agentExtensionNum, int agentStatus, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vendor, string remark) {
            this.InsertListenAgentLogAsync(verifyCode, listenUserID, listenUserName, listenNum, listenExtensionNum, listenOper, agentUserID, agentUserName, agentNum, agentExtensionNum, agentStatus, vendor, remark, null);
        }
        
        public void InsertListenAgentLogAsync(string verifyCode, int listenUserID, string listenUserName, string listenNum, string listenExtensionNum, int listenOper, int agentUserID, string agentUserName, string agentNum, string agentExtensionNum, int agentStatus, CC2015_HollyFormsApp.CCWebAgentTimeState.Vender vendor, string remark, object userState) {
            if ((this.onBeginInsertListenAgentLogDelegate == null)) {
                this.onBeginInsertListenAgentLogDelegate = new BeginOperationDelegate(this.OnBeginInsertListenAgentLog);
            }
            if ((this.onEndInsertListenAgentLogDelegate == null)) {
                this.onEndInsertListenAgentLogDelegate = new EndOperationDelegate(this.OnEndInsertListenAgentLog);
            }
            if ((this.onInsertListenAgentLogCompletedDelegate == null)) {
                this.onInsertListenAgentLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertListenAgentLogCompleted);
            }
            base.InvokeAsync(this.onBeginInsertListenAgentLogDelegate, new object[] {
                        verifyCode,
                        listenUserID,
                        listenUserName,
                        listenNum,
                        listenExtensionNum,
                        listenOper,
                        agentUserID,
                        agentUserName,
                        agentNum,
                        agentExtensionNum,
                        agentStatus,
                        vendor,
                        remark}, this.onEndInsertListenAgentLogDelegate, this.onInsertListenAgentLogCompletedDelegate, userState);
        }
        
        public void SendLogToServer(string verifyCode, string path, string logmsg) {
            base.Channel.SendLogToServer(verifyCode, path, logmsg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendLogToServer(string verifyCode, string path, string logmsg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendLogToServer(verifyCode, path, logmsg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendLogToServer(System.IAsyncResult result) {
            base.Channel.EndSendLogToServer(result);
        }
        
        private System.IAsyncResult OnBeginSendLogToServer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string verifyCode = ((string)(inValues[0]));
            string path = ((string)(inValues[1]));
            string logmsg = ((string)(inValues[2]));
            return this.BeginSendLogToServer(verifyCode, path, logmsg, callback, asyncState);
        }
        
        private object[] OnEndSendLogToServer(System.IAsyncResult result) {
            this.EndSendLogToServer(result);
            return null;
        }
        
        private void OnSendLogToServerCompleted(object state) {
            if ((this.SendLogToServerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendLogToServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendLogToServerAsync(string verifyCode, string path, string logmsg) {
            this.SendLogToServerAsync(verifyCode, path, logmsg, null);
        }
        
        public void SendLogToServerAsync(string verifyCode, string path, string logmsg, object userState) {
            if ((this.onBeginSendLogToServerDelegate == null)) {
                this.onBeginSendLogToServerDelegate = new BeginOperationDelegate(this.OnBeginSendLogToServer);
            }
            if ((this.onEndSendLogToServerDelegate == null)) {
                this.onEndSendLogToServerDelegate = new EndOperationDelegate(this.OnEndSendLogToServer);
            }
            if ((this.onSendLogToServerCompletedDelegate == null)) {
                this.onSendLogToServerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendLogToServerCompleted);
            }
            base.InvokeAsync(this.onBeginSendLogToServerDelegate, new object[] {
                        verifyCode,
                        path,
                        logmsg}, this.onEndSendLogToServerDelegate, this.onSendLogToServerCompletedDelegate, userState);
        }
    }
}
