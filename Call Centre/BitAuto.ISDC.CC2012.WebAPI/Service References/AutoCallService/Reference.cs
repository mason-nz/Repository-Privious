//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.0
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BitAuto.ISDC.CC2012.WebAPI.AutoCallService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AutoCallService.IACProvider")]
    public interface IACProvider {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IACProvider/HollyGetOneData", ReplyAction="http://tempuri.org/IACProvider/HollyGetOneDataResponse")]
        string HollyGetOneData(out bool isNull);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IACProvider/HollyFinishCall", ReplyAction="http://tempuri.org/IACProvider/HollyFinishCallResponse")]
        string HollyFinishCall(string id, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IACProvider/HaltOrStopProject", ReplyAction="http://tempuri.org/IACProvider/HaltOrStopProjectResponse")]
        void HaltOrStopProject(string projectId, int nStatus);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IACProviderChannel : global::BitAuto.ISDC.CC2012.WebAPI.AutoCallService.IACProvider, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ACProviderClient : System.ServiceModel.ClientBase<global::BitAuto.ISDC.CC2012.WebAPI.AutoCallService.IACProvider>, global::BitAuto.ISDC.CC2012.WebAPI.AutoCallService.IACProvider {
        
        public ACProviderClient() {
        }
        
        public ACProviderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ACProviderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ACProviderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ACProviderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HollyGetOneData(out bool isNull) {
            return base.Channel.HollyGetOneData(out isNull);
        }
        
        public string HollyFinishCall(string id, string result) {
            return base.Channel.HollyFinishCall(id, result);
        }
        
        public void HaltOrStopProject(string projectId, int nStatus) {
            base.Channel.HaltOrStopProject(projectId, nStatus);
        }
    }
}
