//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1026
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1026 版自动生成。
// 
#pragma warning disable 1591

namespace BitAuto.ISDC.CC2012.WebService.EasyPass.DealerInfoService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DealerInfoServiceSoap", Namespace="http://easyop.bitauto.com/dms/")]
    public partial class DealerInfoService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateDasAccountByDealerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDealerContactByDealerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDealerIntroductionByDealerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDealerInfoMapCoorDinateByDealerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDealerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDealerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealerInfoByUpdateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealerInfoByDealerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealerInfoByAllDealerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDealerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDealerStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealer400OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DealerInfoService() {
            this.Url = global::BitAuto.ISDC.CC2012.WebService.Properties.Settings.Default.BitAuto_ISDC_CC2012_WebService_EasyPass_DealerInfoService_DealerInfoService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdateDasAccountByDealerIDCompletedEventHandler UpdateDasAccountByDealerIDCompleted;
        
        /// <remarks/>
        public event UpdateDealerContactByDealerIDCompletedEventHandler UpdateDealerContactByDealerIDCompleted;
        
        /// <remarks/>
        public event UpdateDealerIntroductionByDealerIDCompletedEventHandler UpdateDealerIntroductionByDealerIDCompleted;
        
        /// <remarks/>
        public event UpdateDealerInfoMapCoorDinateByDealerIDCompletedEventHandler UpdateDealerInfoMapCoorDinateByDealerIDCompleted;
        
        /// <remarks/>
        public event CreateDealerInfoCompletedEventHandler CreateDealerInfoCompleted;
        
        /// <remarks/>
        public event UpdateDealerInfoCompletedEventHandler UpdateDealerInfoCompleted;
        
        /// <remarks/>
        public event GetDealerInfoByUpdateTimeCompletedEventHandler GetDealerInfoByUpdateTimeCompleted;
        
        /// <remarks/>
        public event GetDealerInfoByDealerIDCompletedEventHandler GetDealerInfoByDealerIDCompleted;
        
        /// <remarks/>
        public event GetDealerInfoByAllDealerIDCompletedEventHandler GetDealerInfoByAllDealerIDCompleted;
        
        /// <remarks/>
        public event DeleteDealerInfoCompletedEventHandler DeleteDealerInfoCompleted;
        
        /// <remarks/>
        public event UpdateDealerStatusCompletedEventHandler UpdateDealerStatusCompleted;
        
        /// <remarks/>
        public event GetDealer400CompletedEventHandler GetDealer400Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyop.bitauto.com/dms/UpdateDasAccountByDealerID", RequestNamespace="http://easyop.bitauto.com/dms/", ResponseNamespace="http://easyop.bitauto.com/dms/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateDasAccountByDealerID(int DealerID, string OldPassword, string NewPassword) {
            object[] results = this.Invoke("UpdateDasAccountByDealerID", new object[] {
                        DealerID,
                        OldPassword,
                        NewPassword});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDasAccountByDealerIDAsync(int DealerID, string OldPassword, string NewPassword) {
            this.UpdateDasAccountByDealerIDAsync(DealerID, OldPassword, NewPassword, null);
        }
        
        /// <remarks/>
        public void UpdateDasAccountByDealerIDAsync(int DealerID, string OldPassword, string NewPassword, object userState) {
            if ((this.UpdateDasAccountByDealerIDOperationCompleted == null)) {
                this.UpdateDasAccountByDealerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDasAccountByDealerIDOperationCompleted);
            }
            this.InvokeAsync("UpdateDasAccountByDealerID", new object[] {
                        DealerID,
                        OldPassword,
                        NewPassword}, this.UpdateDasAccountByDealerIDOperationCompleted, userState);
        }
        
        private void OnUpdateDasAccountByDealerIDOperationCompleted(object arg) {
            if ((this.UpdateDasAccountByDealerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDasAccountByDealerIDCompleted(this, new UpdateDasAccountByDealerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyop.bitauto.com/dms/UpdateDealerContactByDealerID", RequestNamespace="http://easyop.bitauto.com/dms/", ResponseNamespace="http://easyop.bitauto.com/dms/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateDealerContactByDealerID(int DealerID, string ContactAddress, string PostCode, string SalesPhones, string FaxNumbers, string WebSiteUrl, string EmailAddress, string TrafficInfo) {
            object[] results = this.Invoke("UpdateDealerContactByDealerID", new object[] {
                        DealerID,
                        ContactAddress,
                        PostCode,
                        SalesPhones,
                        FaxNumbers,
                        WebSiteUrl,
                        EmailAddress,
                        TrafficInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDealerContactByDealerIDAsync(int DealerID, string ContactAddress, string PostCode, string SalesPhones, string FaxNumbers, string WebSiteUrl, string EmailAddress, string TrafficInfo) {
            this.UpdateDealerContactByDealerIDAsync(DealerID, ContactAddress, PostCode, SalesPhones, FaxNumbers, WebSiteUrl, EmailAddress, TrafficInfo, null);
        }
        
        /// <remarks/>
        public void UpdateDealerContactByDealerIDAsync(int DealerID, string ContactAddress, string PostCode, string SalesPhones, string FaxNumbers, string WebSiteUrl, string EmailAddress, string TrafficInfo, object userState) {
            if ((this.UpdateDealerContactByDealerIDOperationCompleted == null)) {
                this.UpdateDealerContactByDealerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDealerContactByDealerIDOperationCompleted);
            }
            this.InvokeAsync("UpdateDealerContactByDealerID", new object[] {
                        DealerID,
                        ContactAddress,
                        PostCode,
                        SalesPhones,
                        FaxNumbers,
                        WebSiteUrl,
                        EmailAddress,
                        TrafficInfo}, this.UpdateDealerContactByDealerIDOperationCompleted, userState);
        }
        
        private void OnUpdateDealerContactByDealerIDOperationCompleted(object arg) {
            if ((this.UpdateDealerContactByDealerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDealerContactByDealerIDCompleted(this, new UpdateDealerContactByDealerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyop.bitauto.com/dms/UpdateDealerIntroductionByDealerID", RequestNamespace="http://easyop.bitauto.com/dms/", ResponseNamespace="http://easyop.bitauto.com/dms/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateDealerIntroductionByDealerID(int DealerID, string Introduction) {
            object[] results = this.Invoke("UpdateDealerIntroductionByDealerID", new object[] {
                        DealerID,
                        Introduction});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDealerIntroductionByDealerIDAsync(int DealerID, string Introduction) {
            this.UpdateDealerIntroductionByDealerIDAsync(DealerID, Introduction, null);
        }
        
        /// <remarks/>
        public void UpdateDealerIntroductionByDealerIDAsync(int DealerID, string Introduction, object userState) {
            if ((this.UpdateDealerIntroductionByDealerIDOperationCompleted == null)) {
                this.UpdateDealerIntroductionByDealerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDealerIntroductionByDealerIDOperationCompleted);
            }
            this.InvokeAsync("UpdateDealerIntroductionByDealerID", new object[] {
                        DealerID,
                        Introduction}, this.UpdateDealerIntroductionByDealerIDOperationCompleted, userState);
        }
        
        private void OnUpdateDealerIntroductionByDealerIDOperationCompleted(object arg) {
            if ((this.UpdateDealerIntroductionByDealerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDealerIntroductionByDealerIDCompleted(this, new UpdateDealerIntroductionByDealerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyop.bitauto.com/dms/UpdateDealerInfoMapCoorDinateByDealerID", RequestNamespace="http://easyop.bitauto.com/dms/", ResponseNamespace="http://easyop.bitauto.com/dms/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateDealerInfoMapCoorDinateByDealerID(int DealerID, string MapProviderName, string Longitude, string Latitude, string TrafficInfo, string MapCoorDinateRemark) {
            object[] results = this.Invoke("UpdateDealerInfoMapCoorDinateByDealerID", new object[] {
                        DealerID,
                        MapProviderName,
                        Longitude,
                        Latitude,
                        TrafficInfo,
                        MapCoorDinateRemark});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDealerInfoMapCoorDinateByDealerIDAsync(int DealerID, string MapProviderName, string Longitude, string Latitude, string TrafficInfo, string MapCoorDinateRemark) {
            this.UpdateDealerInfoMapCoorDinateByDealerIDAsync(DealerID, MapProviderName, Longitude, Latitude, TrafficInfo, MapCoorDinateRemark, null);
        }
        
        /// <remarks/>
        public void UpdateDealerInfoMapCoorDinateByDealerIDAsync(int DealerID, string MapProviderName, string Longitude, string Latitude, string TrafficInfo, string MapCoorDinateRemark, object userState) {
            if ((this.UpdateDealerInfoMapCoorDinateByDealerIDOperationCompleted == null)) {
                this.UpdateDealerInfoMapCoorDinateByDealerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDealerInfoMapCoorDinateByDealerIDOperationCompleted);
            }
            this.InvokeAsync("UpdateDealerInfoMapCoorDinateByDealerID", new object[] {
                        DealerID,
                        MapProviderName,
                        Longitude,
                        Latitude,
                        TrafficInfo,
                        MapCoorDinateRemark}, this.UpdateDealerInfoMapCoorDinateByDealerIDOperationCompleted, userState);
        }
        
        private void OnUpdateDealerInfoMapCoorDinateByDealerIDOperationCompleted(object arg) {
            if ((this.UpdateDealerInfoMapCoorDinateByDealerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDealerInfoMapCoorDinateByDealerIDCompleted(this, new UpdateDealerInfoMapCoorDinateByDealerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyop.bitauto.com/dms/CreateDealerInfo", RequestNamespace="http://easyop.bitauto.com/dms/", ResponseNamespace="http://easyop.bitauto.com/dms/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateDealerInfo(string DealerFullName, string DealerShortName, int BusinessModeID, int LocationID, string DealerContactAddress, string DealerSalesPhones, int BrandGroupID, string DealerEnterpriseIntroduction, string DealerPostCode, string DealerWebSiteUrl, string DealerEmailAddress, string Longitude, string Latitude, string TrafficInfo) {
            object[] results = this.Invoke("CreateDealerInfo", new object[] {
                        DealerFullName,
                        DealerShortName,
                        BusinessModeID,
                        LocationID,
                        DealerContactAddress,
                        DealerSalesPhones,
                        BrandGroupID,
                        DealerEnterpriseIntroduction,
                        DealerPostCode,
                        DealerWebSiteUrl,
                        DealerEmailAddress,
                        Longitude,
                        Latitude,
                        TrafficInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDealerInfoAsync(string DealerFullName, string DealerShortName, int BusinessModeID, int LocationID, string DealerContactAddress, string DealerSalesPhones, int BrandGroupID, string DealerEnterpriseIntroduction, string DealerPostCode, string DealerWebSiteUrl, string DealerEmailAddress, string Longitude, string Latitude, string TrafficInfo) {
            this.CreateDealerInfoAsync(DealerFullName, DealerShortName, BusinessModeID, LocationID, DealerContactAddress, DealerSalesPhones, BrandGroupID, DealerEnterpriseIntroduction, DealerPostCode, DealerWebSiteUrl, DealerEmailAddress, Longitude, Latitude, TrafficInfo, null);
        }
        
        /// <remarks/>
        public void CreateDealerInfoAsync(string DealerFullName, string DealerShortName, int BusinessModeID, int LocationID, string DealerContactAddress, string DealerSalesPhones, int BrandGroupID, string DealerEnterpriseIntroduction, string DealerPostCode, string DealerWebSiteUrl, string DealerEmailAddress, string Longitude, string Latitude, string TrafficInfo, object userState) {
            if ((this.CreateDealerInfoOperationCompleted == null)) {
                this.CreateDealerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDealerInfoOperationCompleted);
            }
            this.InvokeAsync("CreateDealerInfo", new object[] {
                        DealerFullName,
                        DealerShortName,
                        BusinessModeID,
                        LocationID,
                        DealerContactAddress,
                        DealerSalesPhones,
                        BrandGroupID,
                        DealerEnterpriseIntroduction,
                        DealerPostCode,
                        DealerWebSiteUrl,
                        DealerEmailAddress,
                        Longitude,
                        Latitude,
                        TrafficInfo}, this.CreateDealerInfoOperationCompleted, userState);
        }
        
        private void OnCreateDealerInfoOperationCompleted(object arg) {
            if ((this.CreateDealerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDealerInfoCompleted(this, new CreateDealerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyop.bitauto.com/dms/UpdateDealerInfo", RequestNamespace="http://easyop.bitauto.com/dms/", ResponseNamespace="http://easyop.bitauto.com/dms/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateDealerInfo(int DealerID, string ContactAddress, string PostCode, string SalesPhones, string FaxNumbers, string WebSiteUrl, string EmailAddress) {
            object[] results = this.Invoke("UpdateDealerInfo", new object[] {
                        DealerID,
                        ContactAddress,
                        PostCode,
                        SalesPhones,
                        FaxNumbers,
                        WebSiteUrl,
                        EmailAddress});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDealerInfoAsync(int DealerID, string ContactAddress, string PostCode, string SalesPhones, string FaxNumbers, string WebSiteUrl, string EmailAddress) {
            this.UpdateDealerInfoAsync(DealerID, ContactAddress, PostCode, SalesPhones, FaxNumbers, WebSiteUrl, EmailAddress, null);
        }
        
        /// <remarks/>
        public void UpdateDealerInfoAsync(int DealerID, string ContactAddress, string PostCode, string SalesPhones, string FaxNumbers, string WebSiteUrl, string EmailAddress, object userState) {
            if ((this.UpdateDealerInfoOperationCompleted == null)) {
                this.UpdateDealerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDealerInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateDealerInfo", new object[] {
                        DealerID,
                        ContactAddress,
                        PostCode,
                        SalesPhones,
                        FaxNumbers,
                        WebSiteUrl,
                        EmailAddress}, this.UpdateDealerInfoOperationCompleted, userState);
        }
        
        private void OnUpdateDealerInfoOperationCompleted(object arg) {
            if ((this.UpdateDealerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDealerInfoCompleted(this, new UpdateDealerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyop.bitauto.com/dms/GetDealerInfoByUpdateTime", RequestNamespace="http://easyop.bitauto.com/dms/", ResponseNamespace="http://easyop.bitauto.com/dms/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDealerInfoByUpdateTime(System.DateTime UpdateTime) {
            object[] results = this.Invoke("GetDealerInfoByUpdateTime", new object[] {
                        UpdateTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealerInfoByUpdateTimeAsync(System.DateTime UpdateTime) {
            this.GetDealerInfoByUpdateTimeAsync(UpdateTime, null);
        }
        
        /// <remarks/>
        public void GetDealerInfoByUpdateTimeAsync(System.DateTime UpdateTime, object userState) {
            if ((this.GetDealerInfoByUpdateTimeOperationCompleted == null)) {
                this.GetDealerInfoByUpdateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealerInfoByUpdateTimeOperationCompleted);
            }
            this.InvokeAsync("GetDealerInfoByUpdateTime", new object[] {
                        UpdateTime}, this.GetDealerInfoByUpdateTimeOperationCompleted, userState);
        }
        
        private void OnGetDealerInfoByUpdateTimeOperationCompleted(object arg) {
            if ((this.GetDealerInfoByUpdateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealerInfoByUpdateTimeCompleted(this, new GetDealerInfoByUpdateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyop.bitauto.com/dms/GetDealerInfoByDealerID", RequestNamespace="http://easyop.bitauto.com/dms/", ResponseNamespace="http://easyop.bitauto.com/dms/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDealerInfoByDealerID(int DealerID) {
            object[] results = this.Invoke("GetDealerInfoByDealerID", new object[] {
                        DealerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealerInfoByDealerIDAsync(int DealerID) {
            this.GetDealerInfoByDealerIDAsync(DealerID, null);
        }
        
        /// <remarks/>
        public void GetDealerInfoByDealerIDAsync(int DealerID, object userState) {
            if ((this.GetDealerInfoByDealerIDOperationCompleted == null)) {
                this.GetDealerInfoByDealerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealerInfoByDealerIDOperationCompleted);
            }
            this.InvokeAsync("GetDealerInfoByDealerID", new object[] {
                        DealerID}, this.GetDealerInfoByDealerIDOperationCompleted, userState);
        }
        
        private void OnGetDealerInfoByDealerIDOperationCompleted(object arg) {
            if ((this.GetDealerInfoByDealerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealerInfoByDealerIDCompleted(this, new GetDealerInfoByDealerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyop.bitauto.com/dms/GetDealerInfoByAllDealerID", RequestNamespace="http://easyop.bitauto.com/dms/", ResponseNamespace="http://easyop.bitauto.com/dms/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDealerInfoByAllDealerID() {
            object[] results = this.Invoke("GetDealerInfoByAllDealerID", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealerInfoByAllDealerIDAsync() {
            this.GetDealerInfoByAllDealerIDAsync(null);
        }
        
        /// <remarks/>
        public void GetDealerInfoByAllDealerIDAsync(object userState) {
            if ((this.GetDealerInfoByAllDealerIDOperationCompleted == null)) {
                this.GetDealerInfoByAllDealerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealerInfoByAllDealerIDOperationCompleted);
            }
            this.InvokeAsync("GetDealerInfoByAllDealerID", new object[0], this.GetDealerInfoByAllDealerIDOperationCompleted, userState);
        }
        
        private void OnGetDealerInfoByAllDealerIDOperationCompleted(object arg) {
            if ((this.GetDealerInfoByAllDealerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealerInfoByAllDealerIDCompleted(this, new GetDealerInfoByAllDealerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyop.bitauto.com/dms/DeleteDealerInfo", RequestNamespace="http://easyop.bitauto.com/dms/", ResponseNamespace="http://easyop.bitauto.com/dms/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDealerInfo(int DealerID) {
            object[] results = this.Invoke("DeleteDealerInfo", new object[] {
                        DealerID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDealerInfoAsync(int DealerID) {
            this.DeleteDealerInfoAsync(DealerID, null);
        }
        
        /// <remarks/>
        public void DeleteDealerInfoAsync(int DealerID, object userState) {
            if ((this.DeleteDealerInfoOperationCompleted == null)) {
                this.DeleteDealerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDealerInfoOperationCompleted);
            }
            this.InvokeAsync("DeleteDealerInfo", new object[] {
                        DealerID}, this.DeleteDealerInfoOperationCompleted, userState);
        }
        
        private void OnDeleteDealerInfoOperationCompleted(object arg) {
            if ((this.DeleteDealerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDealerInfoCompleted(this, new DeleteDealerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyop.bitauto.com/dms/UpdateDealerStatus", RequestNamespace="http://easyop.bitauto.com/dms/", ResponseNamespace="http://easyop.bitauto.com/dms/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDealerStatus(int dealerId, int status) {
            object[] results = this.Invoke("UpdateDealerStatus", new object[] {
                        dealerId,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDealerStatusAsync(int dealerId, int status) {
            this.UpdateDealerStatusAsync(dealerId, status, null);
        }
        
        /// <remarks/>
        public void UpdateDealerStatusAsync(int dealerId, int status, object userState) {
            if ((this.UpdateDealerStatusOperationCompleted == null)) {
                this.UpdateDealerStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDealerStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateDealerStatus", new object[] {
                        dealerId,
                        status}, this.UpdateDealerStatusOperationCompleted, userState);
        }
        
        private void OnUpdateDealerStatusOperationCompleted(object arg) {
            if ((this.UpdateDealerStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDealerStatusCompleted(this, new UpdateDealerStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://easyop.bitauto.com/dms/GetDealer400", RequestNamespace="http://easyop.bitauto.com/dms/", ResponseNamespace="http://easyop.bitauto.com/dms/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDealer400(int DealerID) {
            object[] results = this.Invoke("GetDealer400", new object[] {
                        DealerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealer400Async(int DealerID) {
            this.GetDealer400Async(DealerID, null);
        }
        
        /// <remarks/>
        public void GetDealer400Async(int DealerID, object userState) {
            if ((this.GetDealer400OperationCompleted == null)) {
                this.GetDealer400OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealer400OperationCompleted);
            }
            this.InvokeAsync("GetDealer400", new object[] {
                        DealerID}, this.GetDealer400OperationCompleted, userState);
        }
        
        private void OnGetDealer400OperationCompleted(object arg) {
            if ((this.GetDealer400Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealer400Completed(this, new GetDealer400CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDasAccountByDealerIDCompletedEventHandler(object sender, UpdateDasAccountByDealerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDasAccountByDealerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDasAccountByDealerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDealerContactByDealerIDCompletedEventHandler(object sender, UpdateDealerContactByDealerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDealerContactByDealerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDealerContactByDealerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDealerIntroductionByDealerIDCompletedEventHandler(object sender, UpdateDealerIntroductionByDealerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDealerIntroductionByDealerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDealerIntroductionByDealerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDealerInfoMapCoorDinateByDealerIDCompletedEventHandler(object sender, UpdateDealerInfoMapCoorDinateByDealerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDealerInfoMapCoorDinateByDealerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDealerInfoMapCoorDinateByDealerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateDealerInfoCompletedEventHandler(object sender, CreateDealerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDealerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDealerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDealerInfoCompletedEventHandler(object sender, UpdateDealerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDealerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDealerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDealerInfoByUpdateTimeCompletedEventHandler(object sender, GetDealerInfoByUpdateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealerInfoByUpdateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealerInfoByUpdateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDealerInfoByDealerIDCompletedEventHandler(object sender, GetDealerInfoByDealerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealerInfoByDealerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealerInfoByDealerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDealerInfoByAllDealerIDCompletedEventHandler(object sender, GetDealerInfoByAllDealerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealerInfoByAllDealerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealerInfoByAllDealerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDealerInfoCompletedEventHandler(object sender, DeleteDealerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDealerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDealerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDealerStatusCompletedEventHandler(object sender, UpdateDealerStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDealerStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDealerStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDealer400CompletedEventHandler(object sender, GetDealer400CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealer400CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealer400CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591