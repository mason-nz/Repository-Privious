//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace BitAuto.ISDC.CC2012.WebService.YpGroupOrderService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ActiveOrder_CrmSoap", Namespace="http://tempuri.org/")]
    public partial class ActiveOrder_Crm : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private DasSoapHeader dasSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetTGCarOrderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTGCarOrderStateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ActiveOrder_Crm() {
            this.Url = global::BitAuto.ISDC.CC2012.WebService.Properties.Settings.Default.BitAuto_ISDC_CC2012_WebService_YpGroupOrderService_ActiveOrder_Crm;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public DasSoapHeader DasSoapHeaderValue {
            get {
                return this.dasSoapHeaderValueField;
            }
            set {
                this.dasSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTGCarOrderListCompletedEventHandler GetTGCarOrderListCompleted;
        
        /// <remarks/>
        public event SetTGCarOrderStateCompletedEventHandler SetTGCarOrderStateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DasSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTGCarOrderList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTGCarOrderList(int lastMaxId, int orderCount) {
            object[] results = this.Invoke("GetTGCarOrderList", new object[] {
                        lastMaxId,
                        orderCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTGCarOrderListAsync(int lastMaxId, int orderCount) {
            this.GetTGCarOrderListAsync(lastMaxId, orderCount, null);
        }
        
        /// <remarks/>
        public void GetTGCarOrderListAsync(int lastMaxId, int orderCount, object userState) {
            if ((this.GetTGCarOrderListOperationCompleted == null)) {
                this.GetTGCarOrderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTGCarOrderListOperationCompleted);
            }
            this.InvokeAsync("GetTGCarOrderList", new object[] {
                        lastMaxId,
                        orderCount}, this.GetTGCarOrderListOperationCompleted, userState);
        }
        
        private void OnGetTGCarOrderListOperationCompleted(object arg) {
            if ((this.GetTGCarOrderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTGCarOrderListCompleted(this, new GetTGCarOrderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DasSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetTGCarOrderState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetTGCarOrderState(int OrderID, GPOrderTradeState State, string Remark) {
            object[] results = this.Invoke("SetTGCarOrderState", new object[] {
                        OrderID,
                        State,
                        Remark});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetTGCarOrderStateAsync(int OrderID, GPOrderTradeState State, string Remark) {
            this.SetTGCarOrderStateAsync(OrderID, State, Remark, null);
        }
        
        /// <remarks/>
        public void SetTGCarOrderStateAsync(int OrderID, GPOrderTradeState State, string Remark, object userState) {
            if ((this.SetTGCarOrderStateOperationCompleted == null)) {
                this.SetTGCarOrderStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTGCarOrderStateOperationCompleted);
            }
            this.InvokeAsync("SetTGCarOrderState", new object[] {
                        OrderID,
                        State,
                        Remark}, this.SetTGCarOrderStateOperationCompleted, userState);
        }
        
        private void OnSetTGCarOrderStateOperationCompleted(object arg) {
            if ((this.SetTGCarOrderStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTGCarOrderStateCompleted(this, new SetTGCarOrderStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class DasSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private System.Guid tokenKeyField;
        
        private string authorizeCodeField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public System.Guid TokenKey {
            get {
                return this.tokenKeyField;
            }
            set {
                this.tokenKeyField = value;
            }
        }
        
        /// <remarks/>
        public string AuthorizeCode {
            get {
                return this.authorizeCodeField;
            }
            set {
                this.authorizeCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum GPOrderTradeState {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Yes,
        
        /// <remarks/>
        No,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTGCarOrderListCompletedEventHandler(object sender, GetTGCarOrderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTGCarOrderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTGCarOrderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetTGCarOrderStateCompletedEventHandler(object sender, SetTGCarOrderStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTGCarOrderStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTGCarOrderStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591