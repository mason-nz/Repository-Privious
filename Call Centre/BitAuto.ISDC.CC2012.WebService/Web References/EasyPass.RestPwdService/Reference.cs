//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1026
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1026 版自动生成。
// 
#pragma warning disable 1591

namespace BitAuto.ISDC.CC2012.WebService.EasyPass.RestPwdService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserGetPwdSoap", Namespace="http://tempuri.org/")]
    public partial class UserGetPwd : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkByUserLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLingByUserLoginNameAndSysIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountLoginNameForTaoCheOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountLoginNameByDealerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountLoginNameByDealerIdSysIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountLoginNameByDealerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountLoginNameByDealerIdSysIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserListByDealerIDandDeptIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeanIdByAppIdAndDealerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserPasswordByDealerIdForTaocheOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserPasswordByDealerIdForSASOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UserGetPwd() {
            this.Url = global::BitAuto.ISDC.CC2012.WebService.Properties.Settings.Default.BitAuto_ISDC_CC2012_WebService_EasyPass_RestPwdService_UserGetPwd;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetLinkCompletedEventHandler GetLinkCompleted;
        
        /// <remarks/>
        public event GetLinkByUserLoginNameCompletedEventHandler GetLinkByUserLoginNameCompleted;
        
        /// <remarks/>
        public event GetLingByUserLoginNameAndSysIdCompletedEventHandler GetLingByUserLoginNameAndSysIdCompleted;
        
        /// <remarks/>
        public event UpdateAccountLoginNameCompletedEventHandler UpdateAccountLoginNameCompleted;
        
        /// <remarks/>
        public event UpdateAccountLoginNameForTaoCheCompletedEventHandler UpdateAccountLoginNameForTaoCheCompleted;
        
        /// <remarks/>
        public event GetAccountLoginNameByDealerIdCompletedEventHandler GetAccountLoginNameByDealerIdCompleted;
        
        /// <remarks/>
        public event GetAccountLoginNameByDealerIdSysIdCompletedEventHandler GetAccountLoginNameByDealerIdSysIdCompleted;
        
        /// <remarks/>
        public event UpdateAccountLoginNameByDealerIdCompletedEventHandler UpdateAccountLoginNameByDealerIdCompleted;
        
        /// <remarks/>
        public event UpdateAccountLoginNameByDealerIdSysIdCompletedEventHandler UpdateAccountLoginNameByDealerIdSysIdCompleted;
        
        /// <remarks/>
        public event AddNewManagerCompletedEventHandler AddNewManagerCompleted;
        
        /// <remarks/>
        public event AddNewUserCompletedEventHandler AddNewUserCompleted;
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event GetUserListByDealerIDandDeptIDCompletedEventHandler GetUserListByDealerIDandDeptIDCompleted;
        
        /// <remarks/>
        public event GetMeanIdByAppIdAndDealerIdCompletedEventHandler GetMeanIdByAppIdAndDealerIdCompleted;
        
        /// <remarks/>
        public event UpdateUserPasswordByDealerIdForTaocheCompletedEventHandler UpdateUserPasswordByDealerIdForTaocheCompleted;
        
        /// <remarks/>
        public event UpdateUserPasswordByDealerIdForSASCompletedEventHandler UpdateUserPasswordByDealerIdForSASCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLink(int UserId) {
            object[] results = this.Invoke("GetLink", new object[] {
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkAsync(int UserId) {
            this.GetLinkAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetLinkAsync(int UserId, object userState) {
            if ((this.GetLinkOperationCompleted == null)) {
                this.GetLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkOperationCompleted);
            }
            this.InvokeAsync("GetLink", new object[] {
                        UserId}, this.GetLinkOperationCompleted, userState);
        }
        
        private void OnGetLinkOperationCompleted(object arg) {
            if ((this.GetLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkCompleted(this, new GetLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLinkByUserLoginName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetLinkByUserLoginName(string UserLoginName) {
            object[] results = this.Invoke("GetLinkByUserLoginName", new object[] {
                        UserLoginName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkByUserLoginNameAsync(string UserLoginName) {
            this.GetLinkByUserLoginNameAsync(UserLoginName, null);
        }
        
        /// <remarks/>
        public void GetLinkByUserLoginNameAsync(string UserLoginName, object userState) {
            if ((this.GetLinkByUserLoginNameOperationCompleted == null)) {
                this.GetLinkByUserLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkByUserLoginNameOperationCompleted);
            }
            this.InvokeAsync("GetLinkByUserLoginName", new object[] {
                        UserLoginName}, this.GetLinkByUserLoginNameOperationCompleted, userState);
        }
        
        private void OnGetLinkByUserLoginNameOperationCompleted(object arg) {
            if ((this.GetLinkByUserLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkByUserLoginNameCompleted(this, new GetLinkByUserLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLingByUserLoginNameAndSysId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetLingByUserLoginNameAndSysId(string UserLoginName, int sysId) {
            object[] results = this.Invoke("GetLingByUserLoginNameAndSysId", new object[] {
                        UserLoginName,
                        sysId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetLingByUserLoginNameAndSysIdAsync(string UserLoginName, int sysId) {
            this.GetLingByUserLoginNameAndSysIdAsync(UserLoginName, sysId, null);
        }
        
        /// <remarks/>
        public void GetLingByUserLoginNameAndSysIdAsync(string UserLoginName, int sysId, object userState) {
            if ((this.GetLingByUserLoginNameAndSysIdOperationCompleted == null)) {
                this.GetLingByUserLoginNameAndSysIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLingByUserLoginNameAndSysIdOperationCompleted);
            }
            this.InvokeAsync("GetLingByUserLoginNameAndSysId", new object[] {
                        UserLoginName,
                        sysId}, this.GetLingByUserLoginNameAndSysIdOperationCompleted, userState);
        }
        
        private void OnGetLingByUserLoginNameAndSysIdOperationCompleted(object arg) {
            if ((this.GetLingByUserLoginNameAndSysIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLingByUserLoginNameAndSysIdCompleted(this, new GetLingByUserLoginNameAndSysIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccountLoginName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAccountLoginName(int accountId, string newLoginName) {
            object[] results = this.Invoke("UpdateAccountLoginName", new object[] {
                        accountId,
                        newLoginName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountLoginNameAsync(int accountId, string newLoginName) {
            this.UpdateAccountLoginNameAsync(accountId, newLoginName, null);
        }
        
        /// <remarks/>
        public void UpdateAccountLoginNameAsync(int accountId, string newLoginName, object userState) {
            if ((this.UpdateAccountLoginNameOperationCompleted == null)) {
                this.UpdateAccountLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountLoginNameOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountLoginName", new object[] {
                        accountId,
                        newLoginName}, this.UpdateAccountLoginNameOperationCompleted, userState);
        }
        
        private void OnUpdateAccountLoginNameOperationCompleted(object arg) {
            if ((this.UpdateAccountLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountLoginNameCompleted(this, new UpdateAccountLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccountLoginNameForTaoChe", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAccountLoginNameForTaoChe(int accountId, string newLoginName) {
            object[] results = this.Invoke("UpdateAccountLoginNameForTaoChe", new object[] {
                        accountId,
                        newLoginName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountLoginNameForTaoCheAsync(int accountId, string newLoginName) {
            this.UpdateAccountLoginNameForTaoCheAsync(accountId, newLoginName, null);
        }
        
        /// <remarks/>
        public void UpdateAccountLoginNameForTaoCheAsync(int accountId, string newLoginName, object userState) {
            if ((this.UpdateAccountLoginNameForTaoCheOperationCompleted == null)) {
                this.UpdateAccountLoginNameForTaoCheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountLoginNameForTaoCheOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountLoginNameForTaoChe", new object[] {
                        accountId,
                        newLoginName}, this.UpdateAccountLoginNameForTaoCheOperationCompleted, userState);
        }
        
        private void OnUpdateAccountLoginNameForTaoCheOperationCompleted(object arg) {
            if ((this.UpdateAccountLoginNameForTaoCheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountLoginNameForTaoCheCompleted(this, new UpdateAccountLoginNameForTaoCheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountLoginNameByDealerId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountLoginNameByDealerId(int dealerId) {
            object[] results = this.Invoke("GetAccountLoginNameByDealerId", new object[] {
                        dealerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountLoginNameByDealerIdAsync(int dealerId) {
            this.GetAccountLoginNameByDealerIdAsync(dealerId, null);
        }
        
        /// <remarks/>
        public void GetAccountLoginNameByDealerIdAsync(int dealerId, object userState) {
            if ((this.GetAccountLoginNameByDealerIdOperationCompleted == null)) {
                this.GetAccountLoginNameByDealerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountLoginNameByDealerIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountLoginNameByDealerId", new object[] {
                        dealerId}, this.GetAccountLoginNameByDealerIdOperationCompleted, userState);
        }
        
        private void OnGetAccountLoginNameByDealerIdOperationCompleted(object arg) {
            if ((this.GetAccountLoginNameByDealerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountLoginNameByDealerIdCompleted(this, new GetAccountLoginNameByDealerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountLoginNameByDealerIdSysId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountLoginNameByDealerIdSysId(int sysId, int dealerId) {
            object[] results = this.Invoke("GetAccountLoginNameByDealerIdSysId", new object[] {
                        sysId,
                        dealerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountLoginNameByDealerIdSysIdAsync(int sysId, int dealerId) {
            this.GetAccountLoginNameByDealerIdSysIdAsync(sysId, dealerId, null);
        }
        
        /// <remarks/>
        public void GetAccountLoginNameByDealerIdSysIdAsync(int sysId, int dealerId, object userState) {
            if ((this.GetAccountLoginNameByDealerIdSysIdOperationCompleted == null)) {
                this.GetAccountLoginNameByDealerIdSysIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountLoginNameByDealerIdSysIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountLoginNameByDealerIdSysId", new object[] {
                        sysId,
                        dealerId}, this.GetAccountLoginNameByDealerIdSysIdOperationCompleted, userState);
        }
        
        private void OnGetAccountLoginNameByDealerIdSysIdOperationCompleted(object arg) {
            if ((this.GetAccountLoginNameByDealerIdSysIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountLoginNameByDealerIdSysIdCompleted(this, new GetAccountLoginNameByDealerIdSysIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccountLoginNameByDealerId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAccountLoginNameByDealerId(int dealerId, string newLoginName) {
            object[] results = this.Invoke("UpdateAccountLoginNameByDealerId", new object[] {
                        dealerId,
                        newLoginName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountLoginNameByDealerIdAsync(int dealerId, string newLoginName) {
            this.UpdateAccountLoginNameByDealerIdAsync(dealerId, newLoginName, null);
        }
        
        /// <remarks/>
        public void UpdateAccountLoginNameByDealerIdAsync(int dealerId, string newLoginName, object userState) {
            if ((this.UpdateAccountLoginNameByDealerIdOperationCompleted == null)) {
                this.UpdateAccountLoginNameByDealerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountLoginNameByDealerIdOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountLoginNameByDealerId", new object[] {
                        dealerId,
                        newLoginName}, this.UpdateAccountLoginNameByDealerIdOperationCompleted, userState);
        }
        
        private void OnUpdateAccountLoginNameByDealerIdOperationCompleted(object arg) {
            if ((this.UpdateAccountLoginNameByDealerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountLoginNameByDealerIdCompleted(this, new UpdateAccountLoginNameByDealerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccountLoginNameByDealerIdSysId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAccountLoginNameByDealerIdSysId(int sysId, int dealerId, string newLoginName) {
            object[] results = this.Invoke("UpdateAccountLoginNameByDealerIdSysId", new object[] {
                        sysId,
                        dealerId,
                        newLoginName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountLoginNameByDealerIdSysIdAsync(int sysId, int dealerId, string newLoginName) {
            this.UpdateAccountLoginNameByDealerIdSysIdAsync(sysId, dealerId, newLoginName, null);
        }
        
        /// <remarks/>
        public void UpdateAccountLoginNameByDealerIdSysIdAsync(int sysId, int dealerId, string newLoginName, object userState) {
            if ((this.UpdateAccountLoginNameByDealerIdSysIdOperationCompleted == null)) {
                this.UpdateAccountLoginNameByDealerIdSysIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountLoginNameByDealerIdSysIdOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountLoginNameByDealerIdSysId", new object[] {
                        sysId,
                        dealerId,
                        newLoginName}, this.UpdateAccountLoginNameByDealerIdSysIdOperationCompleted, userState);
        }
        
        private void OnUpdateAccountLoginNameByDealerIdSysIdOperationCompleted(object arg) {
            if ((this.UpdateAccountLoginNameByDealerIdSysIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountLoginNameByDealerIdSysIdCompleted(this, new UpdateAccountLoginNameByDealerIdSysIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewManager", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddNewManager(int sysId, string phoneNumber, string email, int dealerId) {
            object[] results = this.Invoke("AddNewManager", new object[] {
                        sysId,
                        phoneNumber,
                        email,
                        dealerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewManagerAsync(int sysId, string phoneNumber, string email, int dealerId) {
            this.AddNewManagerAsync(sysId, phoneNumber, email, dealerId, null);
        }
        
        /// <remarks/>
        public void AddNewManagerAsync(int sysId, string phoneNumber, string email, int dealerId, object userState) {
            if ((this.AddNewManagerOperationCompleted == null)) {
                this.AddNewManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewManagerOperationCompleted);
            }
            this.InvokeAsync("AddNewManager", new object[] {
                        sysId,
                        phoneNumber,
                        email,
                        dealerId}, this.AddNewManagerOperationCompleted, userState);
        }
        
        private void OnAddNewManagerOperationCompleted(object arg) {
            if ((this.AddNewManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewManagerCompleted(this, new AddNewManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNewUser(int sysId, string phoneNumber, string email, int dealerId, int roleId, string name, bool isUpdate) {
            object[] results = this.Invoke("AddNewUser", new object[] {
                        sysId,
                        phoneNumber,
                        email,
                        dealerId,
                        roleId,
                        name,
                        isUpdate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewUserAsync(int sysId, string phoneNumber, string email, int dealerId, int roleId, string name, bool isUpdate) {
            this.AddNewUserAsync(sysId, phoneNumber, email, dealerId, roleId, name, isUpdate, null);
        }
        
        /// <remarks/>
        public void AddNewUserAsync(int sysId, string phoneNumber, string email, int dealerId, int roleId, string name, bool isUpdate, object userState) {
            if ((this.AddNewUserOperationCompleted == null)) {
                this.AddNewUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewUserOperationCompleted);
            }
            this.InvokeAsync("AddNewUser", new object[] {
                        sysId,
                        phoneNumber,
                        email,
                        dealerId,
                        roleId,
                        name,
                        isUpdate}, this.AddNewUserOperationCompleted, userState);
        }
        
        private void OnAddNewUserOperationCompleted(object arg) {
            if ((this.AddNewUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewUserCompleted(this, new AddNewUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfoEntity GetUserInfo(string phoneNum, int dealerId, int sysId) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        phoneNum,
                        dealerId,
                        sysId});
            return ((UserInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string phoneNum, int dealerId, int sysId) {
            this.GetUserInfoAsync(phoneNum, dealerId, sysId, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string phoneNum, int dealerId, int sysId, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        phoneNum,
                        dealerId,
                        sysId}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserListByDealerIDandDeptID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfoEx[] GetUserListByDealerIDandDeptID(int dealerId, int deptId) {
            object[] results = this.Invoke("GetUserListByDealerIDandDeptID", new object[] {
                        dealerId,
                        deptId});
            return ((UserInfoEx[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserListByDealerIDandDeptIDAsync(int dealerId, int deptId) {
            this.GetUserListByDealerIDandDeptIDAsync(dealerId, deptId, null);
        }
        
        /// <remarks/>
        public void GetUserListByDealerIDandDeptIDAsync(int dealerId, int deptId, object userState) {
            if ((this.GetUserListByDealerIDandDeptIDOperationCompleted == null)) {
                this.GetUserListByDealerIDandDeptIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListByDealerIDandDeptIDOperationCompleted);
            }
            this.InvokeAsync("GetUserListByDealerIDandDeptID", new object[] {
                        dealerId,
                        deptId}, this.GetUserListByDealerIDandDeptIDOperationCompleted, userState);
        }
        
        private void OnGetUserListByDealerIDandDeptIDOperationCompleted(object arg) {
            if ((this.GetUserListByDealerIDandDeptIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserListByDealerIDandDeptIDCompleted(this, new GetUserListByDealerIDandDeptIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMeanIdByAppIdAndDealerId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMeanIdByAppIdAndDealerId(string appId, int dealerId) {
            object[] results = this.Invoke("GetMeanIdByAppIdAndDealerId", new object[] {
                        appId,
                        dealerId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeanIdByAppIdAndDealerIdAsync(string appId, int dealerId) {
            this.GetMeanIdByAppIdAndDealerIdAsync(appId, dealerId, null);
        }
        
        /// <remarks/>
        public void GetMeanIdByAppIdAndDealerIdAsync(string appId, int dealerId, object userState) {
            if ((this.GetMeanIdByAppIdAndDealerIdOperationCompleted == null)) {
                this.GetMeanIdByAppIdAndDealerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeanIdByAppIdAndDealerIdOperationCompleted);
            }
            this.InvokeAsync("GetMeanIdByAppIdAndDealerId", new object[] {
                        appId,
                        dealerId}, this.GetMeanIdByAppIdAndDealerIdOperationCompleted, userState);
        }
        
        private void OnGetMeanIdByAppIdAndDealerIdOperationCompleted(object arg) {
            if ((this.GetMeanIdByAppIdAndDealerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeanIdByAppIdAndDealerIdCompleted(this, new GetMeanIdByAppIdAndDealerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserPasswordByDealerIdForTaoche", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUserPasswordByDealerIdForTaoche(int dealerId, string appId, string newPassword) {
            object[] results = this.Invoke("UpdateUserPasswordByDealerIdForTaoche", new object[] {
                        dealerId,
                        appId,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserPasswordByDealerIdForTaocheAsync(int dealerId, string appId, string newPassword) {
            this.UpdateUserPasswordByDealerIdForTaocheAsync(dealerId, appId, newPassword, null);
        }
        
        /// <remarks/>
        public void UpdateUserPasswordByDealerIdForTaocheAsync(int dealerId, string appId, string newPassword, object userState) {
            if ((this.UpdateUserPasswordByDealerIdForTaocheOperationCompleted == null)) {
                this.UpdateUserPasswordByDealerIdForTaocheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserPasswordByDealerIdForTaocheOperationCompleted);
            }
            this.InvokeAsync("UpdateUserPasswordByDealerIdForTaoche", new object[] {
                        dealerId,
                        appId,
                        newPassword}, this.UpdateUserPasswordByDealerIdForTaocheOperationCompleted, userState);
        }
        
        private void OnUpdateUserPasswordByDealerIdForTaocheOperationCompleted(object arg) {
            if ((this.UpdateUserPasswordByDealerIdForTaocheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserPasswordByDealerIdForTaocheCompleted(this, new UpdateUserPasswordByDealerIdForTaocheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserPasswordByDealerIdForSAS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUserPasswordByDealerIdForSAS(int dealerId, string appId, string newPassword) {
            object[] results = this.Invoke("UpdateUserPasswordByDealerIdForSAS", new object[] {
                        dealerId,
                        appId,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserPasswordByDealerIdForSASAsync(int dealerId, string appId, string newPassword) {
            this.UpdateUserPasswordByDealerIdForSASAsync(dealerId, appId, newPassword, null);
        }
        
        /// <remarks/>
        public void UpdateUserPasswordByDealerIdForSASAsync(int dealerId, string appId, string newPassword, object userState) {
            if ((this.UpdateUserPasswordByDealerIdForSASOperationCompleted == null)) {
                this.UpdateUserPasswordByDealerIdForSASOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserPasswordByDealerIdForSASOperationCompleted);
            }
            this.InvokeAsync("UpdateUserPasswordByDealerIdForSAS", new object[] {
                        dealerId,
                        appId,
                        newPassword}, this.UpdateUserPasswordByDealerIdForSASOperationCompleted, userState);
        }
        
        private void OnUpdateUserPasswordByDealerIdForSASOperationCompleted(object arg) {
            if ((this.UpdateUserPasswordByDealerIdForSASCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserPasswordByDealerIdForSASCompleted(this, new UpdateUserPasswordByDealerIdForSASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1026")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserInfoEntity {
        
        private string userPhoneNumField;
        
        private string userEmailField;
        
        private string userNameField;
        
        private string errorMsgField;
        
        /// <remarks/>
        public string UserPhoneNum {
            get {
                return this.userPhoneNumField;
            }
            set {
                this.userPhoneNumField = value;
            }
        }
        
        /// <remarks/>
        public string UserEmail {
            get {
                return this.userEmailField;
            }
            set {
                this.userEmailField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1026")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserInfoEx {
        
        private int dasAccountIDField;
        
        private string dasAccountNameField;
        
        private long deptIDField;
        
        private int roleIDField;
        
        private int isManagerField;
        
        /// <remarks/>
        public int DasAccountID {
            get {
                return this.dasAccountIDField;
            }
            set {
                this.dasAccountIDField = value;
            }
        }
        
        /// <remarks/>
        public string DasAccountName {
            get {
                return this.dasAccountNameField;
            }
            set {
                this.dasAccountNameField = value;
            }
        }
        
        /// <remarks/>
        public long DeptID {
            get {
                return this.deptIDField;
            }
            set {
                this.deptIDField = value;
            }
        }
        
        /// <remarks/>
        public int RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public int IsManager {
            get {
                return this.isManagerField;
            }
            set {
                this.isManagerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLinkCompletedEventHandler(object sender, GetLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLinkByUserLoginNameCompletedEventHandler(object sender, GetLinkByUserLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkByUserLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkByUserLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLingByUserLoginNameAndSysIdCompletedEventHandler(object sender, GetLingByUserLoginNameAndSysIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLingByUserLoginNameAndSysIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLingByUserLoginNameAndSysIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateAccountLoginNameCompletedEventHandler(object sender, UpdateAccountLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateAccountLoginNameForTaoCheCompletedEventHandler(object sender, UpdateAccountLoginNameForTaoCheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountLoginNameForTaoCheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountLoginNameForTaoCheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountLoginNameByDealerIdCompletedEventHandler(object sender, GetAccountLoginNameByDealerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountLoginNameByDealerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountLoginNameByDealerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountLoginNameByDealerIdSysIdCompletedEventHandler(object sender, GetAccountLoginNameByDealerIdSysIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountLoginNameByDealerIdSysIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountLoginNameByDealerIdSysIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateAccountLoginNameByDealerIdCompletedEventHandler(object sender, UpdateAccountLoginNameByDealerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountLoginNameByDealerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountLoginNameByDealerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateAccountLoginNameByDealerIdSysIdCompletedEventHandler(object sender, UpdateAccountLoginNameByDealerIdSysIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountLoginNameByDealerIdSysIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountLoginNameByDealerIdSysIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddNewManagerCompletedEventHandler(object sender, AddNewManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddNewUserCompletedEventHandler(object sender, AddNewUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfoEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfoEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserListByDealerIDandDeptIDCompletedEventHandler(object sender, GetUserListByDealerIDandDeptIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserListByDealerIDandDeptIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserListByDealerIDandDeptIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfoEx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfoEx[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMeanIdByAppIdAndDealerIdCompletedEventHandler(object sender, GetMeanIdByAppIdAndDealerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeanIdByAppIdAndDealerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeanIdByAppIdAndDealerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateUserPasswordByDealerIdForTaocheCompletedEventHandler(object sender, UpdateUserPasswordByDealerIdForTaocheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserPasswordByDealerIdForTaocheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserPasswordByDealerIdForTaocheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateUserPasswordByDealerIdForSASCompletedEventHandler(object sender, UpdateUserPasswordByDealerIdForSASCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserPasswordByDealerIdForSASCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserPasswordByDealerIdForSASCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591