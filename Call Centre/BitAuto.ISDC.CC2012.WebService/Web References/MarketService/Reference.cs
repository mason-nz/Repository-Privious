//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace BitAuto.ISDC.CC2012.WebService.MarketService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RecommendSoap", Namespace="http://tempuri.org/")]
    public partial class Recommend : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private ReSoapHeader reSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetDataXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataXml1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataXml2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Recommend() {
            this.Url = global::BitAuto.ISDC.CC2012.WebService.Properties.Settings.Default.BitAuto_ISDC_CC2012_WebService_MarketService_Recommend;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public ReSoapHeader ReSoapHeaderValue {
            get {
                return this.reSoapHeaderValueField;
            }
            set {
                this.reSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataXmlCompletedEventHandler GetDataXmlCompleted;
        
        /// <remarks/>
        public event GetDataXml1CompletedEventHandler GetDataXml1Completed;
        
        /// <remarks/>
        public event GetDataXml2CompletedEventHandler GetDataXml2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ReSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataXml1", RequestElementName="GetDataXml1", RequestNamespace="http://tempuri.org/", ResponseElementName="GetDataXml1Response", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetDataXml1Result")]
        public string GetDataXml(string[] guid) {
            object[] results = this.Invoke("GetDataXml", new object[] {
                        guid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataXmlAsync(string[] guid) {
            this.GetDataXmlAsync(guid, null);
        }
        
        /// <remarks/>
        public void GetDataXmlAsync(string[] guid, object userState) {
            if ((this.GetDataXmlOperationCompleted == null)) {
                this.GetDataXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataXmlOperationCompleted);
            }
            this.InvokeAsync("GetDataXml", new object[] {
                        guid}, this.GetDataXmlOperationCompleted, userState);
        }
        
        private void OnGetDataXmlOperationCompleted(object arg) {
            if ((this.GetDataXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataXmlCompleted(this, new GetDataXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ReSoapHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="GetDataXml1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataXml2", RequestElementName="GetDataXml2", RequestNamespace="http://tempuri.org/", ResponseElementName="GetDataXml2Response", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetDataXml2Result")]
        public string GetDataXml(int BrandID, int ProID) {
            object[] results = this.Invoke("GetDataXml1", new object[] {
                        BrandID,
                        ProID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataXml1Async(int BrandID, int ProID) {
            this.GetDataXml1Async(BrandID, ProID, null);
        }
        
        /// <remarks/>
        public void GetDataXml1Async(int BrandID, int ProID, object userState) {
            if ((this.GetDataXml1OperationCompleted == null)) {
                this.GetDataXml1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataXml1OperationCompleted);
            }
            this.InvokeAsync("GetDataXml1", new object[] {
                        BrandID,
                        ProID}, this.GetDataXml1OperationCompleted, userState);
        }
        
        private void OnGetDataXml1OperationCompleted(object arg) {
            if ((this.GetDataXml1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataXml1Completed(this, new GetDataXml1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ReSoapHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="GetDataXml2")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataXml3", RequestElementName="GetDataXml3", RequestNamespace="http://tempuri.org/", ResponseElementName="GetDataXml3Response", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetDataXml3Result")]
        public string GetDataXml(int BrandID, int ProID, string ActivityName) {
            object[] results = this.Invoke("GetDataXml2", new object[] {
                        BrandID,
                        ProID,
                        ActivityName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataXml2Async(int BrandID, int ProID, string ActivityName) {
            this.GetDataXml2Async(BrandID, ProID, ActivityName, null);
        }
        
        /// <remarks/>
        public void GetDataXml2Async(int BrandID, int ProID, string ActivityName, object userState) {
            if ((this.GetDataXml2OperationCompleted == null)) {
                this.GetDataXml2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataXml2OperationCompleted);
            }
            this.InvokeAsync("GetDataXml2", new object[] {
                        BrandID,
                        ProID,
                        ActivityName}, this.GetDataXml2OperationCompleted, userState);
        }
        
        private void OnGetDataXml2OperationCompleted(object arg) {
            if ((this.GetDataXml2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataXml2Completed(this, new GetDataXml2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class ReSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private System.Guid tokenKeyField;
        
        private string authorizeCode1Field;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public System.Guid TokenKey {
            get {
                return this.tokenKeyField;
            }
            set {
                this.tokenKeyField = value;
            }
        }
        
        /// <remarks/>
        public string AuthorizeCode1 {
            get {
                return this.authorizeCode1Field;
            }
            set {
                this.authorizeCode1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDataXmlCompletedEventHandler(object sender, GetDataXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDataXml1CompletedEventHandler(object sender, GetDataXml1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataXml1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataXml1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDataXml2CompletedEventHandler(object sender, GetDataXml2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataXml2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataXml2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591